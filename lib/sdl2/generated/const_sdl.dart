// THIS FILE IS GENERATED AUTOMATICALLY AND SHOULD NOT BE EDITED DIRECTLY.
// ignore_for_file: constant_identifier_names
//const SDL_begin_code_h = ;
//const SDL_DEPRECATED = __attribute__((deprecated));
//const SDL_UNUSED = __attribute__((unused));
//const DECLSPEC = __declspec(dllexport);
//const SDLCALL = __cdecl;
//const _System = ;
//const SDL_INLINE = __inline__;
//const __inline__ = __inline;
//const SDL_FORCE_INLINE = __forceinline;
//const SDL_NORETURN = __attribute__((noreturn));
const NULL = 0;
//const SDL_FALLTHROUGH = [[fallthrough]];
//const SDL_HAS_FALLTHROUGH = __has_attribute(__fallthrough__);
//const SDL_h_ = ;
const SDL_INIT_TIMER = 0x00000001;
const SDL_INIT_AUDIO = 0x00000010;
const SDL_INIT_VIDEO = 0x00000020;
const SDL_INIT_JOYSTICK = 0x00000200;
const SDL_INIT_HAPTIC = 0x00001000;
const SDL_INIT_GAMECONTROLLER = 0x00002000;
const SDL_INIT_EVENTS = 0x00004000;
const SDL_INIT_SENSOR = 0x00008000;
const SDL_INIT_NOPARACHUTE = 0x00100000;
const SDL_INIT_EVERYTHING = (SDL_INIT_TIMER |
    SDL_INIT_AUDIO |
    SDL_INIT_VIDEO |
    SDL_INIT_EVENTS |
    SDL_INIT_JOYSTICK |
    SDL_INIT_HAPTIC |
    SDL_INIT_GAMECONTROLLER |
    SDL_INIT_SENSOR);
//const SDL_assert_h_ = ;
//const SDL_ASSERT_LEVEL = SDL_DEFAULT_ASSERT_LEVEL;
//const SDL_TriggerBreakpoint = () __debugbreak();
//const SDL_FUNCTION = __func__;
//const SDL_FILE = __FILE__;
//const SDL_LINE = __LINE__;
//const SDL_NULL_WHILE_LOOP_CONDITION = (0,0);
//const SDL_disabled_assert = (condition) do { (void) sizeof ((condition)); } while (SDL_NULL_WHILE_LOOP_CONDITION);
const SDL_ASSERTION_RETRY = 0;
const SDL_ASSERTION_BREAK = 1;
const SDL_ASSERTION_ABORT = 2;
const SDL_ASSERTION_IGNORE = 3;
const SDL_ASSERTION_ALWAYS_IGNORE = 4;
//const SDL_enabled_assert = (condition) do { while ( !(condition) ) { static struct SDL_AssertData sdl_assert_data = { 0, 0, #condition, 0, 0, 0, 0 }; const SDL_AssertState sdl_assert_state = SDL_ReportAssertion(&sdl_assert_data, SDL_FUNCTION, SDL_FILE, SDL_LINE); if (sdl_assert_state == SDL_ASSERTION_RETRY) { continue; } } while (SDL_NULL_WHILE_LOOP_CONDITION);
//const SDL_assert = (condition) SDL_disabled_assert(condition);
//const SDL_assert_release = (condition) SDL_disabled_assert(condition);
//const SDL_assert_paranoid = (condition) SDL_disabled_assert(condition);
//const SDL_assert_always = (condition) SDL_enabled_assert(condition);
//const SDL_assert_state = SDL_AssertState;
//const SDL_assert_data = SDL_AssertData;
//const SDL_atomic_h_ = ;
//const SDL_CompilerBarrier = () _ReadWriteBarrier();
//const SDL_MemoryBarrierRelease = () __asm__ __volatile__ ("lwsync" : : : "memory");
//const SDL_MemoryBarrierAcquire = () __asm__ __volatile__ ("lwsync" : : : "memory");
//const SDL_MEMORY_BARRIER_USES_FUNCTION = ;
//const SDL_CPUPauseInstruction = () __asm__ __volatile__("pause\n");
//const SDL_AtomicIncRef = (a) SDL_AtomicAdd(a, 1);
//const SDL_AtomicDecRef = (a) (SDL_AtomicAdd(a, -1) == 1);
//const SDL_audio_h_ = ;
const SDL_AUDIO_MASK_BITSIZE = (0xFF);
const SDL_AUDIO_MASK_DATATYPE = (1 << 8);
const SDL_AUDIO_MASK_ENDIAN = (1 << 12);
const SDL_AUDIO_MASK_SIGNED = (1 << 15);
//const SDL_AUDIO_BITSIZE = (x) (x & SDL_AUDIO_MASK_BITSIZE);
//const SDL_AUDIO_ISFLOAT = (x) (x & SDL_AUDIO_MASK_DATATYPE);
//const SDL_AUDIO_ISBIGENDIAN = (x) (x & SDL_AUDIO_MASK_ENDIAN);
//const SDL_AUDIO_ISSIGNED = (x) (x & SDL_AUDIO_MASK_SIGNED);
//const SDL_AUDIO_ISINT = (x) (!SDL_AUDIO_ISFLOAT(x));
//const SDL_AUDIO_ISLITTLEENDIAN = (x) (!SDL_AUDIO_ISBIGENDIAN(x));
//const SDL_AUDIO_ISUNSIGNED = (x) (!SDL_AUDIO_ISSIGNED(x));
const AUDIO_U8 = 0x0008;
const AUDIO_S8 = 0x8008;
const AUDIO_U16LSB = 0x0010;
const AUDIO_S16LSB = 0x8010;
const AUDIO_U16MSB = 0x1010;
const AUDIO_S16MSB = 0x9010;
const AUDIO_U16 = AUDIO_U16LSB;
const AUDIO_S16 = AUDIO_S16LSB;
const AUDIO_S32LSB = 0x8020;
const AUDIO_S32MSB = 0x9020;
const AUDIO_S32 = AUDIO_S32LSB;
const AUDIO_F32LSB = 0x8120;
const AUDIO_F32MSB = 0x9120;
const AUDIO_F32 = AUDIO_F32LSB;
const AUDIO_U16SYS = AUDIO_U16LSB;
const AUDIO_S16SYS = AUDIO_S16LSB;
const AUDIO_S32SYS = AUDIO_S32LSB;
const AUDIO_F32SYS = AUDIO_F32LSB;
const SDL_AUDIO_ALLOW_FREQUENCY_CHANGE = 0x00000001;
const SDL_AUDIO_ALLOW_FORMAT_CHANGE = 0x00000002;
const SDL_AUDIO_ALLOW_CHANNELS_CHANGE = 0x00000004;
const SDL_AUDIO_ALLOW_SAMPLES_CHANGE = 0x00000008;
const SDL_AUDIO_ALLOW_ANY_CHANGE = (SDL_AUDIO_ALLOW_FREQUENCY_CHANGE |
    SDL_AUDIO_ALLOW_FORMAT_CHANGE |
    SDL_AUDIO_ALLOW_CHANNELS_CHANGE |
    SDL_AUDIO_ALLOW_SAMPLES_CHANGE);
const SDL_AUDIOCVT_MAX_FILTERS = 9;
//const SDL_AUDIOCVT_PACKED = __attribute__((packed));
const SDL_AUDIO_STOPPED = 0;
const SDL_AUDIO_PLAYING = 0 + 1;
const SDL_AUDIO_PAUSED = 0 + 2;
//const SDL_LoadWAV = (file, spec, audio_buf, audio_len) SDL_LoadWAV_RW(SDL_RWFromFile(file, "rb"),1, spec,audio_buf,audio_len);
const SDL_MIX_MAXVOLUME = 128;
//const SDL_bits_h_ = ;
//const SDL_blendmode_h_ = ;
const SDL_BLENDMODE_NONE = 0x00000000;
const SDL_BLENDMODE_BLEND = 0x00000001;
const SDL_BLENDMODE_ADD = 0x00000002;
const SDL_BLENDMODE_MOD = 0x00000004;
const SDL_BLENDMODE_MUL = 0x00000008;
const SDL_BLENDMODE_INVALID = 0x7FFFFFFF;
const SDL_BLENDOPERATION_ADD = 0x1;
const SDL_BLENDOPERATION_SUBTRACT = 0x2;
const SDL_BLENDOPERATION_REV_SUBTRACT = 0x3;
const SDL_BLENDOPERATION_MINIMUM = 0x4;
const SDL_BLENDOPERATION_MAXIMUM = 0x5;
const SDL_BLENDFACTOR_ZERO = 0x1;
const SDL_BLENDFACTOR_ONE = 0x2;
const SDL_BLENDFACTOR_SRC_COLOR = 0x3;
const SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR = 0x4;
const SDL_BLENDFACTOR_SRC_ALPHA = 0x5;
const SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA = 0x6;
const SDL_BLENDFACTOR_DST_COLOR = 0x7;
const SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR = 0x8;
const SDL_BLENDFACTOR_DST_ALPHA = 0x9;
const SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA = 0xA;
//const SDL_clipboard_h_ = ;
//const SDL_config_h_ = ;
//const SDL_config_android_h_ = ;
const HAVE_GCC_ATOMICS = 1;
const STDC_HEADERS = 1;
const HAVE_ALLOCA_H = 1;
const HAVE_CTYPE_H = 1;
const HAVE_INTTYPES_H = 1;
const HAVE_LIMITS_H = 1;
const HAVE_MATH_H = 1;
const HAVE_SIGNAL_H = 1;
const HAVE_STDINT_H = 1;
const HAVE_STDIO_H = 1;
const HAVE_STRING_H = 1;
const HAVE_SYS_TYPES_H = 1;
const HAVE_DLOPEN = 1;
const HAVE_MALLOC = 1;
const HAVE_CALLOC = 1;
const HAVE_REALLOC = 1;
const HAVE_FREE = 1;
const HAVE_ALLOCA = 1;
const HAVE_GETENV = 1;
const HAVE_SETENV = 1;
const HAVE_PUTENV = 1;
const HAVE_UNSETENV = 1;
const HAVE_QSORT = 1;
const HAVE_BSEARCH = 1;
const HAVE_ABS = 1;
const HAVE_BCOPY = 1;
const HAVE_MEMSET = 1;
const HAVE_MEMCPY = 1;
const HAVE_MEMMOVE = 1;
const HAVE_MEMCMP = 1;
const HAVE_STRLEN = 1;
const HAVE_STRLCPY = 1;
const HAVE_STRLCAT = 1;
const HAVE_STRCHR = 1;
const HAVE_STRRCHR = 1;
const HAVE_STRSTR = 1;
const HAVE_STRTOK_R = 1;
const HAVE_STRTOL = 1;
const HAVE_STRTOUL = 1;
const HAVE_STRTOLL = 1;
const HAVE_STRTOULL = 1;
const HAVE_STRTOD = 1;
const HAVE_ATOI = 1;
const HAVE_ATOF = 1;
const HAVE_STRCMP = 1;
const HAVE_STRNCMP = 1;
const HAVE_STRCASECMP = 1;
const HAVE_STRNCASECMP = 1;
const HAVE_STRCASESTR = 1;
const HAVE_VSSCANF = 1;
const HAVE_VSNPRINTF = 1;
const HAVE_ACOS = 1;
const HAVE_ACOSF = 1;
const HAVE_ASIN = 1;
const HAVE_ASINF = 1;
const HAVE_ATAN = 1;
const HAVE_ATANF = 1;
const HAVE_ATAN2 = 1;
const HAVE_ATAN2F = 1;
const HAVE_CEIL = 1;
const HAVE_CEILF = 1;
const HAVE_COPYSIGN = 1;
const HAVE_COPYSIGNF = 1;
const HAVE_COS = 1;
const HAVE_COSF = 1;
const HAVE_EXP = 1;
const HAVE_EXPF = 1;
const HAVE_FABS = 1;
const HAVE_FABSF = 1;
const HAVE_FLOOR = 1;
const HAVE_FLOORF = 1;
const HAVE_FMOD = 1;
const HAVE_FMODF = 1;
const HAVE_LOG = 1;
const HAVE_LOGF = 1;
const HAVE_LOG10 = 1;
const HAVE_LOG10F = 1;
const HAVE_LROUND = 1;
const HAVE_LROUNDF = 1;
const HAVE_POW = 1;
const HAVE_POWF = 1;
const HAVE_ROUND = 1;
const HAVE_ROUNDF = 1;
const HAVE_SCALBN = 1;
const HAVE_SCALBNF = 1;
const HAVE_SIN = 1;
const HAVE_SINF = 1;
const HAVE_SQRT = 1;
const HAVE_SQRTF = 1;
const HAVE_TAN = 1;
const HAVE_TANF = 1;
const HAVE_TRUNC = 1;
const HAVE_TRUNCF = 1;
const HAVE_SIGACTION = 1;
const HAVE_SETJMP = 1;
const HAVE_NANOSLEEP = 1;
const HAVE_SYSCONF = 1;
const HAVE_CLOCK_GETTIME = 1;
const SIZEOF_VOIDP = 8;
const SDL_AUDIO_DRIVER_ANDROID = 1;
const SDL_AUDIO_DRIVER_OPENSLES = 1;
const SDL_AUDIO_DRIVER_AAUDIO = 1;
const SDL_AUDIO_DRIVER_DUMMY = 1;
const SDL_JOYSTICK_ANDROID = 1;
const SDL_JOYSTICK_HIDAPI = 1;
const SDL_JOYSTICK_VIRTUAL = 1;
const SDL_HAPTIC_ANDROID = 1;
const SDL_SENSOR_ANDROID = 1;
const SDL_LOADSO_DLOPEN = 1;
const SDL_THREAD_PTHREAD = 1;
const SDL_THREAD_PTHREAD_RECURSIVE_MUTEX = 1;
const SDL_TIMER_UNIX = 1;
const SDL_VIDEO_DRIVER_ANDROID = 1;
const SDL_VIDEO_OPENGL_ES = 1;
const SDL_VIDEO_OPENGL_ES2 = 1;
const SDL_VIDEO_OPENGL_EGL = 1;
const SDL_VIDEO_RENDER_OGL_ES = 1;
const SDL_VIDEO_RENDER_OGL_ES2 = 1;
const SDL_VIDEO_VULKAN = 0;
const SDL_POWER_ANDROID = 1;
const SDL_FILESYSTEM_ANDROID = 1;
//const _SDL_config_emscripten_h_ = ;
const HAVE_ICONV_H = 1;
const HAVE_MALLOC_H = 1;
const HAVE_MEMORY_H = 1;
const HAVE_STDARG_H = 1;
const HAVE_STDLIB_H = 1;
const HAVE_STRINGS_H = 1;
const HAVE_WCHAR_H = 1;
const HAVE_WCSLEN = 1;
const HAVE_WCSDUP = 1;
const HAVE_WCSSTR = 1;
const HAVE_WCSCMP = 1;
const HAVE_WCSNCMP = 1;
const HAVE_WCSCASECMP = 1;
const HAVE_WCSNCASECMP = 1;
const HAVE_SSCANF = 1;
const HAVE_M_PI = 1;
const HAVE_FSEEKO = 1;
const HAVE_FSEEKO64 = 1;
const HAVE_SA_SIGACTION = 1;
const HAVE_MPROTECT = 1;
const HAVE_ICONV = 1;
const SDL_CPUINFO_DISABLED = 1;
const SDL_HAPTIC_DISABLED = 1;
const SDL_HIDAPI_DISABLED = 1;
const SDL_THREADS_DISABLED = 1;
const SDL_AUDIO_DRIVER_DISK = 1;
const SDL_AUDIO_DRIVER_EMSCRIPTEN = 1;
const SDL_JOYSTICK_EMSCRIPTEN = 1;
const SDL_SENSOR_DUMMY = 1;
const SDL_VIDEO_DRIVER_EMSCRIPTEN = 1;
const SDL_POWER_EMSCRIPTEN = 1;
const SDL_FILESYSTEM_EMSCRIPTEN = 1;
//const SDL_config_iphoneos_h_ = ;
const HAVE_SYSCTLBYNAME = 1;
const HAVE_O_CLOEXEC = 1;
const SDL_AUDIO_DRIVER_COREAUDIO = 1;
const SDL_HAPTIC_DUMMY = 1;
const SDL_JOYSTICK_MFI = 1;
const SDL_SENSOR_COREMOTION = 1;
const SDL_VIDEO_DRIVER_UIKIT = 1;
const SDL_VIDEO_DRIVER_DUMMY = 1;
const SDL_PLATFORM_SUPPORTS_METAL = 1;
const SDL_VIDEO_RENDER_METAL = 1;
const SDL_VIDEO_METAL = 1;
const SDL_POWER_UIKIT = 1;
const SDL_IPHONE_KEYBOARD = 1;
const SDL_IPHONE_LAUNCHSCREEN = 1;
const SDL_FILESYSTEM_COCOA = 1;
//const SDL_config_macosx_h_ = ;
const HAVE_FLOAT_H = 1;
const HAVE_LIBUNWIND_H = 1;
const HAVE_IMMINTRIN_H = 1;
const SDL_JOYSTICK_IOKIT = 1;
const SDL_HAPTIC_IOKIT = 1;
const SDL_VIDEO_DRIVER_COCOA = 1;
const SDL_VIDEO_DRIVER_X11_DYNAMIC = '/opt/X11/lib/libX11.6.dylib';
const SDL_VIDEO_DRIVER_X11_DYNAMIC_XEXT = '/opt/X11/lib/libXext.6.dylib';
const SDL_VIDEO_DRIVER_X11_DYNAMIC_XINPUT2 = '/opt/X11/lib/libXi.6.dylib';
const SDL_VIDEO_DRIVER_X11_DYNAMIC_XRANDR = '/opt/X11/lib/libXrandr.2.dylib';
const SDL_VIDEO_DRIVER_X11_DYNAMIC_XSS = '/opt/X11/lib/libXss.1.dylib';
const SDL_VIDEO_DRIVER_X11_XDBE = 1;
const SDL_VIDEO_DRIVER_X11_XRANDR = 1;
const SDL_VIDEO_DRIVER_X11_XSCRNSAVER = 1;
const SDL_VIDEO_DRIVER_X11_XSHAPE = 1;
const SDL_VIDEO_DRIVER_X11_HAS_XKBKEYCODETOKEYSYM = 1;
const SDL_VIDEO_DRIVER_X11_XINPUT2 = 1;
const SDL_VIDEO_DRIVER_X11_SUPPORTS_GENERIC_EVENTS = 1;
const SDL_VIDEO_RENDER_OGL = 1;
const SDL_VIDEO_OPENGL = 1;
const SDL_VIDEO_OPENGL_CGL = 1;
const SDL_VIDEO_OPENGL_GLX = 1;
const SDL_POWER_MACOSX = 1;
const SDL_ALTIVEC_BLITTERS = 1;
//const SDL_config_minimal_h_ = ;
const HAVE_STDDEF_H = 1;
//const _UINTPTR_T_DEFINED = ;
const HAVE_GCC_SYNC_LOCK_TEST_AND_SET = 1;
const SDL_JOYSTICK_DISABLED = 1;
const SDL_SENSOR_DISABLED = 1;
const SDL_LOADSO_DISABLED = 1;
const SDL_TIMERS_DISABLED = 1;
const SDL_FILESYSTEM_DUMMY = 1;
//const SDL_config_ngage_h_ = ;
const SDL_MAIN_NEEDED = 1;
const LACKS_SYS_MMAN_H = 1;
const SDL_THREAD_NGAGE = 1;
const SDL_TIMER_NGAGE = 1;
const SDL_VIDEO_DRIVER_NGAGE = 1;
//const SDL_config_os2_h_ = ;
const SDL_AUDIO_DRIVER_OS2 = 1;
const SDL_POWER_DISABLED = 1;
const SDL_VIDEO_DRIVER_OS2 = 1;
const SDL_JOYSTICK_OS2 = 1;
const HAVE_LIBUSB = 1;
const SDL_LIBUSB_DYNAMIC = 'usb100.dll';
const SDL_THREAD_OS2 = 1;
const SDL_LOADSO_OS2 = 1;
const SDL_TIMER_OS2 = 1;
const SDL_FILESYSTEM_OS2 = 1;
const SDL_LIBSAMPLERATE_DYNAMIC = 'SAMPRATE.DLL';
const HAVE_LIBC = 1;
const HAVE__FSEEKI64 = 1;
const HAVE__FTELLI64 = 1;
const HAVE_WCSLCPY = 1;
const HAVE_WCSLCAT = 1;
const HAVE__WCSICMP = 1;
const HAVE__WCSNICMP = 1;
const HAVE__WCSDUP = 1;
const HAVE__STRREV = 1;
const HAVE__STRUPR = 1;
const HAVE__STRLWR = 1;
const HAVE_ITOA = 1;
const HAVE__LTOA = 1;
const HAVE__ULTOA = 1;
const HAVE__I64TOA = 1;
const HAVE__UI64TOA = 1;
const HAVE_STRICMP = 1;
const HAVE_SNPRINTF = 1;
//const SDL_config_pandora_h_ = ;
const SDL_BYTEORDER = 1234;
const SDL_AUDIO_DRIVER_OSS = 1;
const SDL_INPUT_LINUXEV = 1;
const SDL_JOYSTICK_LINUX = 1;
const SDL_HAPTIC_LINUX = 1;
const SDL_THREAD_PTHREAD_RECURSIVE_MUTEX_NP = 1;
const SDL_FILESYSTEM_UNIX = 1;
const SDL_VIDEO_DRIVER_X11 = 1;
const SDL_VIDEO_DRIVER_PANDORA = 1;
//const SDL_config_windows_h_ = ;
const HAVE_WINSDKVER_H = 1;
const HAVE_SDKDDKVER_H = 1;
const HAVE_DDRAW_H = 1;
const HAVE_DINPUT_H = 1;
const HAVE_DSOUND_H = 1;
const HAVE_DXGI_H = 1;
const HAVE_XINPUT_H = 1;
const HAVE_WINDOWS_GAMING_INPUT_H = 1;
const HAVE_D3D11_H = 1;
const HAVE_ROAPI_H = 1;
const HAVE_D3D12_H = 1;
const HAVE_SHELLSCALINGAPI_H = 1;
const HAVE_MMDEVICEAPI_H = 1;
const HAVE_AUDIOCLIENT_H = 1;
const HAVE_TPCSHRD_H = 1;
const HAVE_SENSORSAPI_H = 1;
const HAVE__STRICMP = 1;
const HAVE__STRNICMP = 1;
const HAVE__COPYSIGN = 1;
const SDL_AUDIO_DRIVER_WASAPI = 1;
const SDL_AUDIO_DRIVER_DSOUND = 1;
const SDL_AUDIO_DRIVER_WINMM = 1;
const SDL_JOYSTICK_DINPUT = 1;
const SDL_JOYSTICK_RAWINPUT = 1;
const SDL_JOYSTICK_WGI = 1;
const SDL_JOYSTICK_XINPUT = 1;
const SDL_HAPTIC_DINPUT = 1;
const SDL_HAPTIC_XINPUT = 1;
const SDL_SENSOR_WINDOWS = 1;
const SDL_LOADSO_WINDOWS = 1;
const SDL_THREAD_GENERIC_COND_SUFFIX = 1;
const SDL_THREAD_WINDOWS = 1;
const SDL_TIMER_WINDOWS = 1;
const SDL_VIDEO_DRIVER_WINDOWS = 1;
const SDL_VIDEO_RENDER_D3D = 1;
const SDL_VIDEO_RENDER_D3D11 = 1;
const SDL_VIDEO_RENDER_D3D12 = 1;
const SDL_VIDEO_OPENGL_WGL = 1;
const SDL_POWER_WINDOWS = 1;
const SDL_FILESYSTEM_WINDOWS = 1;
//const SDL_config_wingdk_h_ = ;
//const SDL_config_winrt_h_ = ;
const NTDDI_WINBLUE = 0x06030000;
const NTDDI_WIN10 = 0x0A000000;
const HAVE__SCALB = 1;
const SDL_THREAD_STDCPP = 1;
const SDL_VIDEO_DRIVER_WINRT = 1;
const SDL_POWER_WINRT = 1;
const SDL_POWER_HARDWIRED = 1;
const SDL_FILESYSTEM_XBOX = 1;
const SDL_DISABLE_WINDOWS_IME = 1;
//const SDL_cpuinfo_h_ = ;
//const __PRFCHWINTRIN_H = ;
//const __MMX__ = ;
//const __3dNOW__ = ;
//const __SSE__ = ;
//const __SSE2__ = ;
//const __SSE3__ = ;
//const __ARM_NEON = 1;
//const __ARM_ARCH = 8;
//const __LSX__ = ;
//const __LASX__ = ;
const SDL_CACHELINE_SIZE = 128;
//const SDL_endian_h_ = ;
const SDL_LIL_ENDIAN = 1234;
const SDL_BIG_ENDIAN = 4321;
const SDL_FLOATWORDORDER = SDL_LIL_ENDIAN;
//const HAS_BUILTIN_BSWAP16 = (_SDL_HAS_BUILTIN(__builtin_bswap16)) || (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8));
//const HAS_BUILTIN_BSWAP32 = (_SDL_HAS_BUILTIN(__builtin_bswap32)) || (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3));
//const HAS_BUILTIN_BSWAP64 = (_SDL_HAS_BUILTIN(__builtin_bswap64)) || (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3));
//const HAS_BROKEN_BSWAP = (__GNUC__ == 2 && __GNUC_MINOR__ <= 95);
//const SDL_Swap16 = (x) __builtin_bswap16(x);
//const SDL_Swap32 = (x) __builtin_bswap32(x);
//const SDL_Swap64 = (x) __builtin_bswap64(x);
//const SDL_SwapLE16 = (X) (X);
//const SDL_SwapLE32 = (X) (X);
//const SDL_SwapLE64 = (X) (X);
//const SDL_SwapFloatLE = (X) (X);
//const SDL_SwapBE16 = (X) SDL_Swap16(X);
//const SDL_SwapBE32 = (X) SDL_Swap32(X);
//const SDL_SwapBE64 = (X) SDL_Swap64(X);
//const SDL_SwapFloatBE = (X) SDL_SwapFloat(X);
//const SDL_error_h_ = ;
//const SDL_OutOfMemory = () SDL_Error(SDL_ENOMEM);
//const SDL_Unsupported = () SDL_Error(SDL_UNSUPPORTED);
//const SDL_InvalidParamError = (param) SDL_SetError("Parameter '%s' is invalid", (param));
const SDL_ENOMEM = 0;
const SDL_EFREAD = 1;
const SDL_EFWRITE = 2;
const SDL_EFSEEK = 3;
const SDL_UNSUPPORTED = 4;
const SDL_LASTERROR = 5;
//const SDL_events_h_ = ;
const SDL_RELEASED = 0;
const SDL_PRESSED = 1;
const SDL_FIRSTEVENT = 0;
const SDL_QUIT = 0x100;
const SDL_APP_TERMINATING = 0x100 + 1;
const SDL_APP_LOWMEMORY = 0x100 + 2;
const SDL_APP_WILLENTERBACKGROUND = 0x100 + 3;
const SDL_APP_DIDENTERBACKGROUND = 0x100 + 4;
const SDL_APP_WILLENTERFOREGROUND = 0x100 + 5;
const SDL_APP_DIDENTERFOREGROUND = 0x100 + 6;
const SDL_LOCALECHANGED = 0x100 + 7;
const SDL_DISPLAYEVENT = 0x150;
const SDL_WINDOWEVENT = 0x200;
const SDL_SYSWMEVENT = 0x200 + 1;
const SDL_KEYDOWN = 0x300;
const SDL_KEYUP = 0x300 + 1;
const SDL_TEXTEDITING = 0x300 + 2;
const SDL_TEXTINPUT = 0x300 + 3;
const SDL_KEYMAPCHANGED = 0x300 + 4;
const SDL_TEXTEDITING_EXT = 0x300 + 5;
const SDL_MOUSEMOTION = 0x400;
const SDL_MOUSEBUTTONDOWN = 0x400 + 1;
const SDL_MOUSEBUTTONUP = 0x400 + 2;
const SDL_MOUSEWHEEL = 0x400 + 3;
const SDL_JOYAXISMOTION = 0x600;
const SDL_JOYBALLMOTION = 0x600 + 1;
const SDL_JOYHATMOTION = 0x600 + 2;
const SDL_JOYBUTTONDOWN = 0x600 + 3;
const SDL_JOYBUTTONUP = 0x600 + 4;
const SDL_JOYDEVICEADDED = 0x600 + 5;
const SDL_JOYDEVICEREMOVED = 0x600 + 6;
const SDL_JOYBATTERYUPDATED = 0x600 + 7;
const SDL_CONTROLLERAXISMOTION = 0x650;
const SDL_CONTROLLERBUTTONDOWN = 0x650 + 1;
const SDL_CONTROLLERBUTTONUP = 0x650 + 2;
const SDL_CONTROLLERDEVICEADDED = 0x650 + 3;
const SDL_CONTROLLERDEVICEREMOVED = 0x650 + 4;
const SDL_CONTROLLERDEVICEREMAPPED = 0x650 + 5;
const SDL_CONTROLLERTOUCHPADDOWN = 0x650 + 6;
const SDL_CONTROLLERTOUCHPADMOTION = 0x650 + 7;
const SDL_CONTROLLERTOUCHPADUP = 0x650 + 8;
const SDL_CONTROLLERSENSORUPDATE = 0x650 + 9;
const SDL_FINGERDOWN = 0x700;
const SDL_FINGERUP = 0x700 + 1;
const SDL_FINGERMOTION = 0x700 + 2;
const SDL_DOLLARGESTURE = 0x800;
const SDL_DOLLARRECORD = 0x800 + 1;
const SDL_MULTIGESTURE = 0x800 + 2;
const SDL_CLIPBOARDUPDATE = 0x900;
const SDL_DROPFILE = 0x1000;
const SDL_DROPTEXT = 0x1000 + 1;
const SDL_DROPBEGIN = 0x1000 + 2;
const SDL_DROPCOMPLETE = 0x1000 + 3;
const SDL_AUDIODEVICEADDED = 0x1100;
const SDL_AUDIODEVICEREMOVED = 0x1100 + 1;
const SDL_SENSORUPDATE = 0x1200;
const SDL_RENDER_TARGETS_RESET = 0x2000;
const SDL_RENDER_DEVICE_RESET = 0x2000 + 1;
const SDL_POLLSENTINEL = 0x7F00;
const SDL_USEREVENT = 0x8000;
const SDL_LASTEVENT = 0xFFFF;
const SDL_TEXTEDITINGEVENT_TEXT_SIZE = (32);
const SDL_TEXTINPUTEVENT_TEXT_SIZE = (32);
const SDL_ADDEVENT = 0;
const SDL_PEEKEVENT = 1;
const SDL_GETEVENT = 2;
const SDL_QUERY = -1;
const SDL_IGNORE = 0;
const SDL_DISABLE = 0;
const SDL_ENABLE = 1;
//const SDL_GetEventState = (type) SDL_EventState(type, SDL_QUERY);
//const SDL_filesystem_h_ = ;
//const SDL_gamecontroller_h_ = ;
const SDL_CONTROLLER_TYPE_UNKNOWN = 0;
const SDL_CONTROLLER_TYPE_XBOX360 = 0 + 1;
const SDL_CONTROLLER_TYPE_XBOXONE = 0 + 2;
const SDL_CONTROLLER_TYPE_PS3 = 0 + 3;
const SDL_CONTROLLER_TYPE_PS4 = 0 + 4;
const SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_PRO = 0 + 5;
const SDL_CONTROLLER_TYPE_VIRTUAL = 0 + 6;
const SDL_CONTROLLER_TYPE_PS5 = 0 + 7;
const SDL_CONTROLLER_TYPE_AMAZON_LUNA = 0 + 8;
const SDL_CONTROLLER_TYPE_GOOGLE_STADIA = 0 + 9;
const SDL_CONTROLLER_TYPE_NVIDIA_SHIELD = 0 + 10;
const SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_LEFT = 0 + 11;
const SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT = 0 + 12;
const SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_PAIR = 0 + 13;
const SDL_CONTROLLER_BINDTYPE_NONE = 0;
const SDL_CONTROLLER_BINDTYPE_BUTTON = 0 + 1;
const SDL_CONTROLLER_BINDTYPE_AXIS = 0 + 2;
const SDL_CONTROLLER_BINDTYPE_HAT = 0 + 3;
//const SDL_GameControllerAddMappingsFromFile = (file) SDL_GameControllerAddMappingsFromRW(SDL_RWFromFile(file, "rb"), 1);
const SDL_CONTROLLER_AXIS_INVALID = -1;
const SDL_CONTROLLER_AXIS_LEFTX = -1 + 1;
const SDL_CONTROLLER_AXIS_LEFTY = -1 + 2;
const SDL_CONTROLLER_AXIS_RIGHTX = -1 + 3;
const SDL_CONTROLLER_AXIS_RIGHTY = -1 + 4;
const SDL_CONTROLLER_AXIS_TRIGGERLEFT = -1 + 5;
const SDL_CONTROLLER_AXIS_TRIGGERRIGHT = -1 + 6;
const SDL_CONTROLLER_AXIS_MAX = -1 + 7;
const SDL_CONTROLLER_BUTTON_INVALID = -1;
const SDL_CONTROLLER_BUTTON_A = -1 + 1;
const SDL_CONTROLLER_BUTTON_B = -1 + 2;
const SDL_CONTROLLER_BUTTON_X = -1 + 3;
const SDL_CONTROLLER_BUTTON_Y = -1 + 4;
const SDL_CONTROLLER_BUTTON_BACK = -1 + 5;
const SDL_CONTROLLER_BUTTON_GUIDE = -1 + 6;
const SDL_CONTROLLER_BUTTON_START = -1 + 7;
const SDL_CONTROLLER_BUTTON_LEFTSTICK = -1 + 8;
const SDL_CONTROLLER_BUTTON_RIGHTSTICK = -1 + 9;
const SDL_CONTROLLER_BUTTON_LEFTSHOULDER = -1 + 10;
const SDL_CONTROLLER_BUTTON_RIGHTSHOULDER = -1 + 11;
const SDL_CONTROLLER_BUTTON_DPAD_UP = -1 + 12;
const SDL_CONTROLLER_BUTTON_DPAD_DOWN = -1 + 13;
const SDL_CONTROLLER_BUTTON_DPAD_LEFT = -1 + 14;
const SDL_CONTROLLER_BUTTON_DPAD_RIGHT = -1 + 15;
const SDL_CONTROLLER_BUTTON_MISC1 = -1 + 16;
const SDL_CONTROLLER_BUTTON_PADDLE1 = -1 + 17;
const SDL_CONTROLLER_BUTTON_PADDLE2 = -1 + 18;
const SDL_CONTROLLER_BUTTON_PADDLE3 = -1 + 19;
const SDL_CONTROLLER_BUTTON_PADDLE4 = -1 + 20;
const SDL_CONTROLLER_BUTTON_TOUCHPAD = -1 + 21;
const SDL_CONTROLLER_BUTTON_MAX = -1 + 22;
//const SDL_gesture_h_ = ;
//const SDL_guid_h_ = ;
//const SDL_haptic_h_ = ;
const SDL_HAPTIC_CONSTANT = (1 << 0);
const SDL_HAPTIC_SINE = (1 << 1);
const SDL_HAPTIC_LEFTRIGHT = (1 << 2);
const SDL_HAPTIC_TRIANGLE = (1 << 3);
const SDL_HAPTIC_SAWTOOTHUP = (1 << 4);
const SDL_HAPTIC_SAWTOOTHDOWN = (1 << 5);
const SDL_HAPTIC_RAMP = (1 << 6);
const SDL_HAPTIC_SPRING = (1 << 7);
const SDL_HAPTIC_DAMPER = (1 << 8);
const SDL_HAPTIC_INERTIA = (1 << 9);
const SDL_HAPTIC_FRICTION = (1 << 10);
const SDL_HAPTIC_CUSTOM = (1 << 11);
const SDL_HAPTIC_GAIN = (1 << 12);
const SDL_HAPTIC_AUTOCENTER = (1 << 13);
const SDL_HAPTIC_STATUS = (1 << 14);
const SDL_HAPTIC_PAUSE = (1 << 15);
const SDL_HAPTIC_POLAR = 0;
const SDL_HAPTIC_CARTESIAN = 1;
const SDL_HAPTIC_SPHERICAL = 2;
const SDL_HAPTIC_STEERING_AXIS = 3;
const SDL_HAPTIC_INFINITY = 4294967295;
//const SDL_hidapi_h_ = ;
//const SDL_hints_h_ = ;
const SDL_HINT_ACCELEROMETER_AS_JOYSTICK = 'SDL_ACCELEROMETER_AS_JOYSTICK';
const SDL_HINT_ALLOW_ALT_TAB_WHILE_GRABBED = 'SDL_ALLOW_ALT_TAB_WHILE_GRABBED';
const SDL_HINT_ALLOW_TOPMOST = 'SDL_ALLOW_TOPMOST';
const SDL_HINT_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION =
    'SDL_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION';
const SDL_HINT_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION =
    'SDL_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION';
const SDL_HINT_ANDROID_BLOCK_ON_PAUSE = 'SDL_ANDROID_BLOCK_ON_PAUSE';
const SDL_HINT_ANDROID_BLOCK_ON_PAUSE_PAUSEAUDIO =
    'SDL_ANDROID_BLOCK_ON_PAUSE_PAUSEAUDIO';
const SDL_HINT_ANDROID_TRAP_BACK_BUTTON = 'SDL_ANDROID_TRAP_BACK_BUTTON';
const SDL_HINT_APP_NAME = 'SDL_APP_NAME';
const SDL_HINT_APPLE_TV_CONTROLLER_UI_EVENTS =
    'SDL_APPLE_TV_CONTROLLER_UI_EVENTS';
const SDL_HINT_APPLE_TV_REMOTE_ALLOW_ROTATION =
    'SDL_APPLE_TV_REMOTE_ALLOW_ROTATION';
const SDL_HINT_AUDIO_CATEGORY = 'SDL_AUDIO_CATEGORY';
const SDL_HINT_AUDIO_DEVICE_APP_NAME = 'SDL_AUDIO_DEVICE_APP_NAME';
const SDL_HINT_AUDIO_DEVICE_STREAM_NAME = 'SDL_AUDIO_DEVICE_STREAM_NAME';
const SDL_HINT_AUDIO_DEVICE_STREAM_ROLE = 'SDL_AUDIO_DEVICE_STREAM_ROLE';
const SDL_HINT_AUDIO_RESAMPLING_MODE = 'SDL_AUDIO_RESAMPLING_MODE';
const SDL_HINT_AUTO_UPDATE_JOYSTICKS = 'SDL_AUTO_UPDATE_JOYSTICKS';
const SDL_HINT_AUTO_UPDATE_SENSORS = 'SDL_AUTO_UPDATE_SENSORS';
const SDL_HINT_BMP_SAVE_LEGACY_FORMAT = 'SDL_BMP_SAVE_LEGACY_FORMAT';
const SDL_HINT_DISPLAY_USABLE_BOUNDS = 'SDL_DISPLAY_USABLE_BOUNDS';
const SDL_HINT_EMSCRIPTEN_ASYNCIFY = 'SDL_EMSCRIPTEN_ASYNCIFY';
const SDL_HINT_EMSCRIPTEN_KEYBOARD_ELEMENT = 'SDL_EMSCRIPTEN_KEYBOARD_ELEMENT';
const SDL_HINT_ENABLE_SCREEN_KEYBOARD = 'SDL_ENABLE_SCREEN_KEYBOARD';
const SDL_HINT_ENABLE_STEAM_CONTROLLERS = 'SDL_ENABLE_STEAM_CONTROLLERS';
const SDL_HINT_EVENT_LOGGING = 'SDL_EVENT_LOGGING';
const SDL_HINT_FORCE_RAISEWINDOW = 'SDL_HINT_FORCE_RAISEWINDOW';
const SDL_HINT_FRAMEBUFFER_ACCELERATION = 'SDL_FRAMEBUFFER_ACCELERATION';
const SDL_HINT_GAMECONTROLLERCONFIG = 'SDL_GAMECONTROLLERCONFIG';
const SDL_HINT_GAMECONTROLLERCONFIG_FILE = 'SDL_GAMECONTROLLERCONFIG_FILE';
const SDL_HINT_GAMECONTROLLERTYPE = 'SDL_GAMECONTROLLERTYPE';
const SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES =
    'SDL_GAMECONTROLLER_IGNORE_DEVICES';
const SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT =
    'SDL_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT';
const SDL_HINT_GAMECONTROLLER_USE_BUTTON_LABELS =
    'SDL_GAMECONTROLLER_USE_BUTTON_LABELS';
const SDL_HINT_GRAB_KEYBOARD = 'SDL_GRAB_KEYBOARD';
const SDL_HINT_HIDAPI_IGNORE_DEVICES = 'SDL_HIDAPI_IGNORE_DEVICES';
const SDL_HINT_IDLE_TIMER_DISABLED = 'SDL_IOS_IDLE_TIMER_DISABLED';
const SDL_HINT_IME_INTERNAL_EDITING = 'SDL_IME_INTERNAL_EDITING';
const SDL_HINT_IME_SHOW_UI = 'SDL_IME_SHOW_UI';
const SDL_HINT_IME_SUPPORT_EXTENDED_TEXT = 'SDL_IME_SUPPORT_EXTENDED_TEXT';
const SDL_HINT_IOS_HIDE_HOME_INDICATOR = 'SDL_IOS_HIDE_HOME_INDICATOR';
const SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS =
    'SDL_JOYSTICK_ALLOW_BACKGROUND_EVENTS';
const SDL_HINT_JOYSTICK_HIDAPI = 'SDL_JOYSTICK_HIDAPI';
const SDL_HINT_JOYSTICK_HIDAPI_GAMECUBE = 'SDL_JOYSTICK_HIDAPI_GAMECUBE';
const SDL_HINT_JOYSTICK_GAMECUBE_RUMBLE_BRAKE =
    'SDL_JOYSTICK_GAMECUBE_RUMBLE_BRAKE';
const SDL_HINT_JOYSTICK_HIDAPI_JOY_CONS = 'SDL_JOYSTICK_HIDAPI_JOY_CONS';
const SDL_HINT_JOYSTICK_HIDAPI_COMBINE_JOY_CONS =
    'SDL_JOYSTICK_HIDAPI_COMBINE_JOY_CONS';
const SDL_HINT_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS =
    'SDL_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS';
const SDL_HINT_JOYSTICK_HIDAPI_LUNA = 'SDL_JOYSTICK_HIDAPI_LUNA';
const SDL_HINT_JOYSTICK_HIDAPI_NINTENDO_CLASSIC =
    'SDL_JOYSTICK_HIDAPI_NINTENDO_CLASSIC';
const SDL_HINT_JOYSTICK_HIDAPI_SHIELD = 'SDL_JOYSTICK_HIDAPI_SHIELD';
const SDL_HINT_JOYSTICK_HIDAPI_PS3 = 'SDL_JOYSTICK_HIDAPI_PS3';
const SDL_HINT_JOYSTICK_HIDAPI_PS4 = 'SDL_JOYSTICK_HIDAPI_PS4';
const SDL_HINT_JOYSTICK_HIDAPI_PS4_RUMBLE = 'SDL_JOYSTICK_HIDAPI_PS4_RUMBLE';
const SDL_HINT_JOYSTICK_HIDAPI_PS5 = 'SDL_JOYSTICK_HIDAPI_PS5';
const SDL_HINT_JOYSTICK_HIDAPI_PS5_PLAYER_LED =
    'SDL_JOYSTICK_HIDAPI_PS5_PLAYER_LED';
const SDL_HINT_JOYSTICK_HIDAPI_PS5_RUMBLE = 'SDL_JOYSTICK_HIDAPI_PS5_RUMBLE';
const SDL_HINT_JOYSTICK_HIDAPI_STADIA = 'SDL_JOYSTICK_HIDAPI_STADIA';
const SDL_HINT_JOYSTICK_HIDAPI_STEAM = 'SDL_JOYSTICK_HIDAPI_STEAM';
const SDL_HINT_JOYSTICK_HIDAPI_SWITCH = 'SDL_JOYSTICK_HIDAPI_SWITCH';
const SDL_HINT_JOYSTICK_HIDAPI_SWITCH_HOME_LED =
    'SDL_JOYSTICK_HIDAPI_SWITCH_HOME_LED';
const SDL_HINT_JOYSTICK_HIDAPI_JOYCON_HOME_LED =
    'SDL_JOYSTICK_HIDAPI_JOYCON_HOME_LED';
const SDL_HINT_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED =
    'SDL_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED';
const SDL_HINT_JOYSTICK_HIDAPI_WII = 'SDL_JOYSTICK_HIDAPI_WII';
const SDL_HINT_JOYSTICK_HIDAPI_WII_PLAYER_LED =
    'SDL_JOYSTICK_HIDAPI_WII_PLAYER_LED';
const SDL_HINT_JOYSTICK_HIDAPI_XBOX = 'SDL_JOYSTICK_HIDAPI_XBOX';
const SDL_HINT_JOYSTICK_HIDAPI_XBOX_360 = 'SDL_JOYSTICK_HIDAPI_XBOX_360';
const SDL_HINT_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED =
    'SDL_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED';
const SDL_HINT_JOYSTICK_HIDAPI_XBOX_360_WIRELESS =
    'SDL_JOYSTICK_HIDAPI_XBOX_360_WIRELESS';
const SDL_HINT_JOYSTICK_HIDAPI_XBOX_ONE = 'SDL_JOYSTICK_HIDAPI_XBOX_ONE';
const SDL_HINT_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED =
    'SDL_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED';
const SDL_HINT_JOYSTICK_RAWINPUT = 'SDL_JOYSTICK_RAWINPUT';
const SDL_HINT_JOYSTICK_RAWINPUT_CORRELATE_XINPUT =
    'SDL_JOYSTICK_RAWINPUT_CORRELATE_XINPUT';
const SDL_HINT_JOYSTICK_ROG_CHAKRAM = 'SDL_JOYSTICK_ROG_CHAKRAM';
const SDL_HINT_JOYSTICK_THREAD = 'SDL_JOYSTICK_THREAD';
const SDL_HINT_JOYSTICK_WGI = 'SDL_JOYSTICK_WGI';
const SDL_HINT_KMSDRM_REQUIRE_DRM_MASTER = 'SDL_KMSDRM_REQUIRE_DRM_MASTER';
const SDL_HINT_JOYSTICK_DEVICE = 'SDL_JOYSTICK_DEVICE';
const SDL_HINT_LINUX_DIGITAL_HATS = 'SDL_LINUX_DIGITAL_HATS';
const SDL_HINT_LINUX_HAT_DEADZONES = 'SDL_LINUX_HAT_DEADZONES';
const SDL_HINT_LINUX_JOYSTICK_CLASSIC = 'SDL_LINUX_JOYSTICK_CLASSIC';
const SDL_HINT_LINUX_JOYSTICK_DEADZONES = 'SDL_LINUX_JOYSTICK_DEADZONES';
const SDL_HINT_MAC_BACKGROUND_APP = 'SDL_MAC_BACKGROUND_APP';
const SDL_HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK =
    'SDL_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK';
const SDL_HINT_MAC_OPENGL_ASYNC_DISPATCH = 'SDL_MAC_OPENGL_ASYNC_DISPATCH';
const SDL_HINT_MOUSE_DOUBLE_CLICK_RADIUS = 'SDL_MOUSE_DOUBLE_CLICK_RADIUS';
const SDL_HINT_MOUSE_DOUBLE_CLICK_TIME = 'SDL_MOUSE_DOUBLE_CLICK_TIME';
const SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH = 'SDL_MOUSE_FOCUS_CLICKTHROUGH';
const SDL_HINT_MOUSE_NORMAL_SPEED_SCALE = 'SDL_MOUSE_NORMAL_SPEED_SCALE';
const SDL_HINT_MOUSE_RELATIVE_MODE_CENTER = 'SDL_MOUSE_RELATIVE_MODE_CENTER';
const SDL_HINT_MOUSE_RELATIVE_MODE_WARP = 'SDL_MOUSE_RELATIVE_MODE_WARP';
const SDL_HINT_MOUSE_RELATIVE_SCALING = 'SDL_MOUSE_RELATIVE_SCALING';
const SDL_HINT_MOUSE_RELATIVE_SPEED_SCALE = 'SDL_MOUSE_RELATIVE_SPEED_SCALE';
const SDL_HINT_MOUSE_RELATIVE_SYSTEM_SCALE = 'SDL_MOUSE_RELATIVE_SYSTEM_SCALE';
const SDL_HINT_MOUSE_RELATIVE_WARP_MOTION = 'SDL_MOUSE_RELATIVE_WARP_MOTION';
const SDL_HINT_MOUSE_TOUCH_EVENTS = 'SDL_MOUSE_TOUCH_EVENTS';
const SDL_HINT_MOUSE_AUTO_CAPTURE = 'SDL_MOUSE_AUTO_CAPTURE';
const SDL_HINT_NO_SIGNAL_HANDLERS = 'SDL_NO_SIGNAL_HANDLERS';
const SDL_HINT_OPENGL_ES_DRIVER = 'SDL_OPENGL_ES_DRIVER';
const SDL_HINT_ORIENTATIONS = 'SDL_IOS_ORIENTATIONS';
const SDL_HINT_POLL_SENTINEL = 'SDL_POLL_SENTINEL';
const SDL_HINT_PREFERRED_LOCALES = 'SDL_PREFERRED_LOCALES';
const SDL_HINT_QTWAYLAND_CONTENT_ORIENTATION =
    'SDL_QTWAYLAND_CONTENT_ORIENTATION';
const SDL_HINT_QTWAYLAND_WINDOW_FLAGS = 'SDL_QTWAYLAND_WINDOW_FLAGS';
const SDL_HINT_RENDER_BATCHING = 'SDL_RENDER_BATCHING';
const SDL_HINT_RENDER_LINE_METHOD = 'SDL_RENDER_LINE_METHOD';
const SDL_HINT_RENDER_DIRECT3D11_DEBUG = 'SDL_RENDER_DIRECT3D11_DEBUG';
const SDL_HINT_RENDER_DIRECT3D_THREADSAFE = 'SDL_RENDER_DIRECT3D_THREADSAFE';
const SDL_HINT_RENDER_DRIVER = 'SDL_RENDER_DRIVER';
const SDL_HINT_RENDER_LOGICAL_SIZE_MODE = 'SDL_RENDER_LOGICAL_SIZE_MODE';
const SDL_HINT_RENDER_OPENGL_SHADERS = 'SDL_RENDER_OPENGL_SHADERS';
const SDL_HINT_RENDER_SCALE_QUALITY = 'SDL_RENDER_SCALE_QUALITY';
const SDL_HINT_RENDER_VSYNC = 'SDL_RENDER_VSYNC';
const SDL_HINT_RENDER_METAL_PREFER_LOW_POWER_DEVICE =
    'SDL_RENDER_METAL_PREFER_LOW_POWER_DEVICE';
const SDL_HINT_PS2_DYNAMIC_VSYNC = 'SDL_PS2_DYNAMIC_VSYNC';
const SDL_HINT_RETURN_KEY_HIDES_IME = 'SDL_RETURN_KEY_HIDES_IME';
const SDL_HINT_RPI_VIDEO_LAYER = 'SDL_RPI_VIDEO_LAYER';
const SDL_HINT_SCREENSAVER_INHIBIT_ACTIVITY_NAME =
    'SDL_SCREENSAVER_INHIBIT_ACTIVITY_NAME';
const SDL_HINT_THREAD_FORCE_REALTIME_TIME_CRITICAL =
    'SDL_THREAD_FORCE_REALTIME_TIME_CRITICAL';
const SDL_HINT_THREAD_PRIORITY_POLICY = 'SDL_THREAD_PRIORITY_POLICY';
const SDL_HINT_THREAD_STACK_SIZE = 'SDL_THREAD_STACK_SIZE';
const SDL_HINT_TIMER_RESOLUTION = 'SDL_TIMER_RESOLUTION';
const SDL_HINT_TOUCH_MOUSE_EVENTS = 'SDL_TOUCH_MOUSE_EVENTS';
const SDL_HINT_VITA_TOUCH_MOUSE_DEVICE = 'SDL_HINT_VITA_TOUCH_MOUSE_DEVICE';
const SDL_HINT_TV_REMOTE_AS_JOYSTICK = 'SDL_TV_REMOTE_AS_JOYSTICK';
const SDL_HINT_VIDEO_ALLOW_SCREENSAVER = 'SDL_VIDEO_ALLOW_SCREENSAVER';
const SDL_HINT_VIDEO_DOUBLE_BUFFER = 'SDL_VIDEO_DOUBLE_BUFFER';
const SDL_HINT_VIDEO_EGL_ALLOW_TRANSPARENCY =
    'SDL_VIDEO_EGL_ALLOW_TRANSPARENCY';
const SDL_HINT_VIDEO_EXTERNAL_CONTEXT = 'SDL_VIDEO_EXTERNAL_CONTEXT';
const SDL_HINT_VIDEO_HIGHDPI_DISABLED = 'SDL_VIDEO_HIGHDPI_DISABLED';
const SDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES = 'SDL_VIDEO_MAC_FULLSCREEN_SPACES';
const SDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS =
    'SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS';
const SDL_HINT_VIDEO_WAYLAND_ALLOW_LIBDECOR =
    'SDL_VIDEO_WAYLAND_ALLOW_LIBDECOR';
const SDL_HINT_VIDEO_WAYLAND_PREFER_LIBDECOR =
    'SDL_VIDEO_WAYLAND_PREFER_LIBDECOR';
const SDL_HINT_VIDEO_WAYLAND_MODE_EMULATION =
    'SDL_VIDEO_WAYLAND_MODE_EMULATION';
const SDL_HINT_VIDEO_WAYLAND_EMULATE_MOUSE_WARP =
    'SDL_VIDEO_WAYLAND_EMULATE_MOUSE_WARP';
const SDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT =
    'SDL_VIDEO_WINDOW_SHARE_PIXEL_FORMAT';
const SDL_HINT_VIDEO_FOREIGN_WINDOW_OPENGL = 'SDL_VIDEO_FOREIGN_WINDOW_OPENGL';
const SDL_HINT_VIDEO_FOREIGN_WINDOW_VULKAN = 'SDL_VIDEO_FOREIGN_WINDOW_VULKAN';
const SDL_HINT_VIDEO_WIN_D3DCOMPILER = 'SDL_VIDEO_WIN_D3DCOMPILER';
const SDL_HINT_VIDEO_X11_FORCE_EGL = 'SDL_VIDEO_X11_FORCE_EGL';
const SDL_HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR =
    'SDL_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR';
const SDL_HINT_VIDEO_X11_NET_WM_PING = 'SDL_VIDEO_X11_NET_WM_PING';
const SDL_HINT_VIDEO_X11_WINDOW_VISUALID = 'SDL_VIDEO_X11_WINDOW_VISUALID';
const SDL_HINT_VIDEO_X11_XINERAMA = 'SDL_VIDEO_X11_XINERAMA';
const SDL_HINT_VIDEO_X11_XRANDR = 'SDL_VIDEO_X11_XRANDR';
const SDL_HINT_VIDEO_X11_XVIDMODE = 'SDL_VIDEO_X11_XVIDMODE';
const SDL_HINT_WAVE_FACT_CHUNK = 'SDL_WAVE_FACT_CHUNK';
const SDL_HINT_WAVE_RIFF_CHUNK_SIZE = 'SDL_WAVE_RIFF_CHUNK_SIZE';
const SDL_HINT_WAVE_TRUNCATION = 'SDL_WAVE_TRUNCATION';
const SDL_HINT_WINDOWS_DISABLE_THREAD_NAMING =
    'SDL_WINDOWS_DISABLE_THREAD_NAMING';
const SDL_HINT_WINDOWS_ENABLE_MENU_MNEMONICS =
    'SDL_WINDOWS_ENABLE_MENU_MNEMONICS';
const SDL_HINT_WINDOWS_ENABLE_MESSAGELOOP = 'SDL_WINDOWS_ENABLE_MESSAGELOOP';
const SDL_HINT_WINDOWS_FORCE_MUTEX_CRITICAL_SECTIONS =
    'SDL_WINDOWS_FORCE_MUTEX_CRITICAL_SECTIONS';
const SDL_HINT_WINDOWS_FORCE_SEMAPHORE_KERNEL =
    'SDL_WINDOWS_FORCE_SEMAPHORE_KERNEL';
const SDL_HINT_WINDOWS_INTRESOURCE_ICON = 'SDL_WINDOWS_INTRESOURCE_ICON';
const SDL_HINT_WINDOWS_INTRESOURCE_ICON_SMALL =
    'SDL_WINDOWS_INTRESOURCE_ICON_SMALL';
const SDL_HINT_WINDOWS_NO_CLOSE_ON_ALT_F4 = 'SDL_WINDOWS_NO_CLOSE_ON_ALT_F4';
const SDL_HINT_WINDOWS_USE_D3D9EX = 'SDL_WINDOWS_USE_D3D9EX';
const SDL_HINT_WINDOWS_DPI_AWARENESS = 'SDL_WINDOWS_DPI_AWARENESS';
const SDL_HINT_WINDOWS_DPI_SCALING = 'SDL_WINDOWS_DPI_SCALING';
const SDL_HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN =
    'SDL_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN';
const SDL_HINT_WINDOW_NO_ACTIVATION_WHEN_SHOWN =
    'SDL_WINDOW_NO_ACTIVATION_WHEN_SHOWN';
const SDL_HINT_WINRT_HANDLE_BACK_BUTTON = 'SDL_WINRT_HANDLE_BACK_BUTTON';
const SDL_HINT_WINRT_PRIVACY_POLICY_LABEL = 'SDL_WINRT_PRIVACY_POLICY_LABEL';
const SDL_HINT_WINRT_PRIVACY_POLICY_URL = 'SDL_WINRT_PRIVACY_POLICY_URL';
const SDL_HINT_X11_FORCE_OVERRIDE_REDIRECT = 'SDL_X11_FORCE_OVERRIDE_REDIRECT';
const SDL_HINT_XINPUT_ENABLED = 'SDL_XINPUT_ENABLED';
const SDL_HINT_DIRECTINPUT_ENABLED = 'SDL_DIRECTINPUT_ENABLED';
const SDL_HINT_XINPUT_USE_OLD_JOYSTICK_MAPPING =
    'SDL_XINPUT_USE_OLD_JOYSTICK_MAPPING';
const SDL_HINT_AUDIO_INCLUDE_MONITORS = 'SDL_AUDIO_INCLUDE_MONITORS';
const SDL_HINT_X11_WINDOW_TYPE = 'SDL_X11_WINDOW_TYPE';
const SDL_HINT_QUIT_ON_LAST_WINDOW_CLOSE = 'SDL_QUIT_ON_LAST_WINDOW_CLOSE';
const SDL_HINT_VIDEODRIVER = 'SDL_VIDEODRIVER';
const SDL_HINT_AUDIODRIVER = 'SDL_AUDIODRIVER';
const SDL_HINT_KMSDRM_DEVICE_INDEX = 'SDL_KMSDRM_DEVICE_INDEX';
const SDL_HINT_TRACKPAD_IS_TOUCH_ONLY = 'SDL_TRACKPAD_IS_TOUCH_ONLY';
const SDL_HINT_DEFAULT = 0;
const SDL_HINT_NORMAL = 1;
const SDL_HINT_OVERRIDE = 2;
//const SDL_joystick_h_ = ;
const SDL_JOYSTICK_TYPE_UNKNOWN = 0;
const SDL_JOYSTICK_TYPE_GAMECONTROLLER = 1;
const SDL_JOYSTICK_TYPE_WHEEL = 2;
const SDL_JOYSTICK_TYPE_ARCADE_STICK = 3;
const SDL_JOYSTICK_TYPE_FLIGHT_STICK = 4;
const SDL_JOYSTICK_TYPE_DANCE_PAD = 5;
const SDL_JOYSTICK_TYPE_GUITAR = 6;
const SDL_JOYSTICK_TYPE_DRUM_KIT = 7;
const SDL_JOYSTICK_TYPE_ARCADE_PAD = 8;
const SDL_JOYSTICK_TYPE_THROTTLE = 9;
const SDL_JOYSTICK_POWER_UNKNOWN = -1;
const SDL_JOYSTICK_POWER_EMPTY = -1 + 1;
const SDL_JOYSTICK_POWER_LOW = -1 + 2;
const SDL_JOYSTICK_POWER_MEDIUM = -1 + 3;
const SDL_JOYSTICK_POWER_FULL = -1 + 4;
const SDL_JOYSTICK_POWER_WIRED = -1 + 5;
const SDL_JOYSTICK_POWER_MAX = -1 + 6;
const SDL_IPHONE_MAX_GFORCE = 5.0;
const SDL_VIRTUAL_JOYSTICK_DESC_VERSION = 1;
const SDL_JOYSTICK_AXIS_MAX = 32767;
const SDL_JOYSTICK_AXIS_MIN = -32768;
const SDL_HAT_CENTERED = 0x00;
const SDL_HAT_UP = 0x01;
const SDL_HAT_RIGHT = 0x02;
const SDL_HAT_DOWN = 0x04;
const SDL_HAT_LEFT = 0x08;
const SDL_HAT_RIGHTUP = (SDL_HAT_RIGHT | SDL_HAT_UP);
const SDL_HAT_RIGHTDOWN = (SDL_HAT_RIGHT | SDL_HAT_DOWN);
const SDL_HAT_LEFTUP = (SDL_HAT_LEFT | SDL_HAT_UP);
const SDL_HAT_LEFTDOWN = (SDL_HAT_LEFT | SDL_HAT_DOWN);
//const SDL_keyboard_h_ = ;
//const SDL_keycode_h_ = ;
const SDLK_SCANCODE_MASK = (1 << 30);
//const SDL_SCANCODE_TO_KEYCODE = (X) (X | SDLK_SCANCODE_MASK);
const SDLK_UNKNOWN = 0;
const SDLK_RETURN = 13;
const SDLK_ESCAPE = 27;
const SDLK_BACKSPACE = 8;
const SDLK_TAB = 9;
const SDLK_SPACE = 32;
const SDLK_EXCLAIM = 33;
const SDLK_QUOTEDBL = 34;
const SDLK_HASH = 35;
const SDLK_PERCENT = 37;
const SDLK_DOLLAR = 36;
const SDLK_AMPERSAND = 38;
const SDLK_QUOTE = 39;
const SDLK_LEFTPAREN = 40;
const SDLK_RIGHTPAREN = 41;
const SDLK_ASTERISK = 42;
const SDLK_PLUS = 43;
const SDLK_COMMA = 44;
const SDLK_MINUS = 45;
const SDLK_PERIOD = 46;
const SDLK_SLASH = 47;
const SDLK_0 = 48;
const SDLK_1 = 49;
const SDLK_2 = 50;
const SDLK_3 = 51;
const SDLK_4 = 52;
const SDLK_5 = 53;
const SDLK_6 = 54;
const SDLK_7 = 55;
const SDLK_8 = 56;
const SDLK_9 = 57;
const SDLK_COLON = 58;
const SDLK_SEMICOLON = 59;
const SDLK_LESS = 60;
const SDLK_EQUALS = 61;
const SDLK_GREATER = 62;
const SDLK_QUESTION = 63;
const SDLK_AT = 64;
const SDLK_LEFTBRACKET = 91;
const SDLK_BACKSLASH = 92;
const SDLK_RIGHTBRACKET = 93;
const SDLK_CARET = 94;
const SDLK_UNDERSCORE = 95;
const SDLK_BACKQUOTE = 96;
const SDLK_a = 97;
const SDLK_b = 98;
const SDLK_c = 99;
const SDLK_d = 100;
const SDLK_e = 101;
const SDLK_f = 102;
const SDLK_g = 103;
const SDLK_h = 104;
const SDLK_i = 105;
const SDLK_j = 106;
const SDLK_k = 107;
const SDLK_l = 108;
const SDLK_m = 109;
const SDLK_n = 110;
const SDLK_o = 111;
const SDLK_p = 112;
const SDLK_q = 113;
const SDLK_r = 114;
const SDLK_s = 115;
const SDLK_t = 116;
const SDLK_u = 117;
const SDLK_v = 118;
const SDLK_w = 119;
const SDLK_x = 120;
const SDLK_y = 121;
const SDLK_z = 122;
//const SDLK_CAPSLOCK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CAPSLOCK);
//const SDLK_F1 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F1);
//const SDLK_F2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F2);
//const SDLK_F3 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F3);
//const SDLK_F4 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F4);
//const SDLK_F5 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F5);
//const SDLK_F6 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F6);
//const SDLK_F7 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F7);
//const SDLK_F8 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F8);
//const SDLK_F9 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F9);
//const SDLK_F10 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F10);
//const SDLK_F11 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F11);
//const SDLK_F12 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F12);
//const SDLK_PRINTSCREEN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRINTSCREEN);
//const SDLK_SCROLLLOCK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SCROLLLOCK);
//const SDLK_PAUSE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAUSE);
//const SDLK_INSERT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_INSERT);
//const SDLK_HOME = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HOME);
//const SDLK_PAGEUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEUP);
const SDLK_DELETE = 127;
//const SDLK_END = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_END);
//const SDLK_PAGEDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEDOWN);
//const SDLK_RIGHT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RIGHT);
//const SDLK_LEFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LEFT);
//const SDLK_DOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DOWN);
//const SDLK_UP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UP);
//const SDLK_NUMLOCKCLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_NUMLOCKCLEAR);
//const SDLK_KP_DIVIDE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DIVIDE);
//const SDLK_KP_MULTIPLY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MULTIPLY);
//const SDLK_KP_MINUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MINUS);
//const SDLK_KP_PLUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUS);
//const SDLK_KP_ENTER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_ENTER);
//const SDLK_KP_1 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_1);
//const SDLK_KP_2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_2);
//const SDLK_KP_3 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_3);
//const SDLK_KP_4 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_4);
//const SDLK_KP_5 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_5);
//const SDLK_KP_6 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_6);
//const SDLK_KP_7 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_7);
//const SDLK_KP_8 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_8);
//const SDLK_KP_9 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_9);
//const SDLK_KP_0 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_0);
//const SDLK_KP_PERIOD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERIOD);
//const SDLK_APPLICATION = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APPLICATION);
//const SDLK_POWER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_POWER);
//const SDLK_KP_EQUALS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALS);
//const SDLK_F13 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F13);
//const SDLK_F14 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F14);
//const SDLK_F15 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F15);
//const SDLK_F16 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F16);
//const SDLK_F17 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F17);
//const SDLK_F18 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F18);
//const SDLK_F19 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F19);
//const SDLK_F20 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F20);
//const SDLK_F21 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F21);
//const SDLK_F22 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F22);
//const SDLK_F23 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F23);
//const SDLK_F24 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F24);
//const SDLK_EXECUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXECUTE);
//const SDLK_HELP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HELP);
//const SDLK_MENU = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MENU);
//const SDLK_SELECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SELECT);
//const SDLK_STOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_STOP);
//const SDLK_AGAIN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AGAIN);
//const SDLK_UNDO = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UNDO);
//const SDLK_CUT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CUT);
//const SDLK_COPY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COPY);
//const SDLK_PASTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PASTE);
//const SDLK_FIND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_FIND);
//const SDLK_MUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MUTE);
//const SDLK_VOLUMEUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEUP);
//const SDLK_VOLUMEDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEDOWN);
//const SDLK_KP_COMMA = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COMMA);
//const SDLK_KP_EQUALSAS400 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALSAS400);
//const SDLK_ALTERASE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_ALTERASE);
//const SDLK_SYSREQ = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SYSREQ);
//const SDLK_CANCEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CANCEL);
//const SDLK_CLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEAR);
//const SDLK_PRIOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRIOR);
//const SDLK_RETURN2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RETURN2);
//const SDLK_SEPARATOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SEPARATOR);
//const SDLK_OUT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OUT);
//const SDLK_OPER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OPER);
//const SDLK_CLEARAGAIN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEARAGAIN);
//const SDLK_CRSEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CRSEL);
//const SDLK_EXSEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXSEL);
//const SDLK_KP_00 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_00);
//const SDLK_KP_000 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_000);
//const SDLK_THOUSANDSSEPARATOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_THOUSANDSSEPARATOR);
//const SDLK_DECIMALSEPARATOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DECIMALSEPARATOR);
//const SDLK_CURRENCYUNIT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYUNIT);
//const SDLK_CURRENCYSUBUNIT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYSUBUNIT);
//const SDLK_KP_LEFTPAREN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTPAREN);
//const SDLK_KP_RIGHTPAREN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTPAREN);
//const SDLK_KP_LEFTBRACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTBRACE);
//const SDLK_KP_RIGHTBRACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTBRACE);
//const SDLK_KP_TAB = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_TAB);
//const SDLK_KP_BACKSPACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BACKSPACE);
//const SDLK_KP_A = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_A);
//const SDLK_KP_B = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_B);
//const SDLK_KP_C = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_C);
//const SDLK_KP_D = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_D);
//const SDLK_KP_E = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_E);
//const SDLK_KP_F = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_F);
//const SDLK_KP_XOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_XOR);
//const SDLK_KP_POWER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_POWER);
//const SDLK_KP_PERCENT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERCENT);
//const SDLK_KP_LESS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LESS);
//const SDLK_KP_GREATER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_GREATER);
//const SDLK_KP_AMPERSAND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AMPERSAND);
//const SDLK_KP_DBLAMPERSAND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DBLAMPERSAND);
//const SDLK_KP_VERTICALBAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_VERTICALBAR);
//const SDLK_KP_DBLVERTICALBAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DBLVERTICALBAR);
//const SDLK_KP_COLON = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COLON);
//const SDLK_KP_HASH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HASH);
//const SDLK_KP_SPACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_SPACE);
//const SDLK_KP_AT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AT);
//const SDLK_KP_EXCLAM = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EXCLAM);
//const SDLK_KP_MEMSTORE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSTORE);
//const SDLK_KP_MEMRECALL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMRECALL);
//const SDLK_KP_MEMCLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMCLEAR);
//const SDLK_KP_MEMADD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMADD);
//const SDLK_KP_MEMSUBTRACT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSUBTRACT);
//const SDLK_KP_MEMMULTIPLY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMMULTIPLY);
//const SDLK_KP_MEMDIVIDE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMDIVIDE);
//const SDLK_KP_PLUSMINUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUSMINUS);
//const SDLK_KP_CLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEAR);
//const SDLK_KP_CLEARENTRY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEARENTRY);
//const SDLK_KP_BINARY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BINARY);
//const SDLK_KP_OCTAL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_OCTAL);
//const SDLK_KP_DECIMAL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DECIMAL);
//const SDLK_KP_HEXADECIMAL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HEXADECIMAL);
//const SDLK_LCTRL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LCTRL);
//const SDLK_LSHIFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LSHIFT);
//const SDLK_LALT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LALT);
//const SDLK_LGUI = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LGUI);
//const SDLK_RCTRL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RCTRL);
//const SDLK_RSHIFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RSHIFT);
//const SDLK_RALT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RALT);
//const SDLK_RGUI = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RGUI);
//const SDLK_MODE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MODE);
//const SDLK_AUDIONEXT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIONEXT);
//const SDLK_AUDIOPREV = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOPREV);
//const SDLK_AUDIOSTOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOSTOP);
//const SDLK_AUDIOPLAY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOPLAY);
//const SDLK_AUDIOMUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOMUTE);
//const SDLK_MEDIASELECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIASELECT);
//const SDLK_WWW = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_WWW);
//const SDLK_MAIL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MAIL);
//const SDLK_CALCULATOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CALCULATOR);
//const SDLK_COMPUTER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COMPUTER);
//const SDLK_AC_SEARCH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_SEARCH);
//const SDLK_AC_HOME = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_HOME);
//const SDLK_AC_BACK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BACK);
//const SDLK_AC_FORWARD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_FORWARD);
//const SDLK_AC_STOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_STOP);
//const SDLK_AC_REFRESH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_REFRESH);
//const SDLK_AC_BOOKMARKS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BOOKMARKS);
//const SDLK_BRIGHTNESSDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_BRIGHTNESSDOWN);
//const SDLK_BRIGHTNESSUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_BRIGHTNESSUP);
//const SDLK_DISPLAYSWITCH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DISPLAYSWITCH);
//const SDLK_KBDILLUMTOGGLE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMTOGGLE);
//const SDLK_KBDILLUMDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMDOWN);
//const SDLK_KBDILLUMUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMUP);
//const SDLK_EJECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EJECT);
//const SDLK_SLEEP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SLEEP);
//const SDLK_APP1 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APP1);
//const SDLK_APP2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APP2);
//const SDLK_AUDIOREWIND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOREWIND);
//const SDLK_AUDIOFASTFORWARD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOFASTFORWARD);
//const SDLK_SOFTLEFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SOFTLEFT);
//const SDLK_SOFTRIGHT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SOFTRIGHT);
//const SDLK_CALL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CALL);
//const SDLK_ENDCALL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_ENDCALL);
const KMOD_NONE = 0x0000;
const KMOD_LSHIFT = 0x0001;
const KMOD_RSHIFT = 0x0002;
const KMOD_LCTRL = 0x0040;
const KMOD_RCTRL = 0x0080;
const KMOD_LALT = 0x0100;
const KMOD_RALT = 0x0200;
const KMOD_LGUI = 0x0400;
const KMOD_RGUI = 0x0800;
const KMOD_NUM = 0x1000;
const KMOD_CAPS = 0x2000;
const KMOD_MODE = 0x4000;
const KMOD_SCROLL = 0x8000;
const KMOD_CTRL = KMOD_LCTRL | KMOD_RCTRL;
const KMOD_SHIFT = KMOD_LSHIFT | KMOD_RSHIFT;
const KMOD_ALT = KMOD_LALT | KMOD_RALT;
const KMOD_GUI = KMOD_LGUI | KMOD_RGUI;
const KMOD_RESERVED = KMOD_SCROLL;
//const SDL_loadso_h_ = ;
//const _SDL_locale_h = ;
//const SDL_log_h_ = ;
const SDL_MAX_LOG_MESSAGE = 4096;
const SDL_LOG_CATEGORY_APPLICATION = 0;
const SDL_LOG_CATEGORY_ERROR = 1;
const SDL_LOG_CATEGORY_ASSERT = 2;
const SDL_LOG_CATEGORY_SYSTEM = 3;
const SDL_LOG_CATEGORY_AUDIO = 4;
const SDL_LOG_CATEGORY_VIDEO = 5;
const SDL_LOG_CATEGORY_RENDER = 6;
const SDL_LOG_CATEGORY_INPUT = 7;
const SDL_LOG_CATEGORY_TEST = 8;
const SDL_LOG_CATEGORY_RESERVED1 = 9;
const SDL_LOG_CATEGORY_RESERVED2 = 10;
const SDL_LOG_CATEGORY_RESERVED3 = 11;
const SDL_LOG_CATEGORY_RESERVED4 = 12;
const SDL_LOG_CATEGORY_RESERVED5 = 13;
const SDL_LOG_CATEGORY_RESERVED6 = 14;
const SDL_LOG_CATEGORY_RESERVED7 = 15;
const SDL_LOG_CATEGORY_RESERVED8 = 16;
const SDL_LOG_CATEGORY_RESERVED9 = 17;
const SDL_LOG_CATEGORY_RESERVED10 = 18;
const SDL_LOG_CATEGORY_CUSTOM = 19;
const SDL_LOG_PRIORITY_VERBOSE = 1;
const SDL_LOG_PRIORITY_DEBUG = 1 + 1;
const SDL_LOG_PRIORITY_INFO = 1 + 2;
const SDL_LOG_PRIORITY_WARN = 1 + 3;
const SDL_LOG_PRIORITY_ERROR = 1 + 4;
const SDL_LOG_PRIORITY_CRITICAL = 1 + 5;
const SDL_NUM_LOG_PRIORITIES = 1 + 6;
//const SDL_main_h_ = ;
//const SDL_MAIN_AVAILABLE = ;
//const SDLMAIN_DECLSPEC = DECLSPEC;
//const SDL_PS2_SKIP_IOP_RESET = () void reset_IOP(); void reset_IOP() {};
//const main = SDL_main;
//const SDL_messagebox_h_ = ;
const SDL_MESSAGEBOX_ERROR = 0x00000010;
const SDL_MESSAGEBOX_WARNING = 0x00000020;
const SDL_MESSAGEBOX_INFORMATION = 0x00000040;
const SDL_MESSAGEBOX_BUTTONS_LEFT_TO_RIGHT = 0x00000080;
const SDL_MESSAGEBOX_BUTTONS_RIGHT_TO_LEFT = 0x00000100;
const SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT = 0x00000001;
const SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT = 0x00000002;
const SDL_MESSAGEBOX_COLOR_BACKGROUND = 0;
const SDL_MESSAGEBOX_COLOR_TEXT = 1;
const SDL_MESSAGEBOX_COLOR_BUTTON_BORDER = 2;
const SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND = 3;
const SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED = 4;
const SDL_MESSAGEBOX_COLOR_MAX = 5;
//const SDL_metal_h_ = ;
//const SDL_misc_h_ = ;
//const SDL_mouse_h_ = ;
const SDL_SYSTEM_CURSOR_ARROW = 0;
const SDL_SYSTEM_CURSOR_IBEAM = 1;
const SDL_SYSTEM_CURSOR_WAIT = 2;
const SDL_SYSTEM_CURSOR_CROSSHAIR = 3;
const SDL_SYSTEM_CURSOR_WAITARROW = 4;
const SDL_SYSTEM_CURSOR_SIZENWSE = 5;
const SDL_SYSTEM_CURSOR_SIZENESW = 6;
const SDL_SYSTEM_CURSOR_SIZEWE = 7;
const SDL_SYSTEM_CURSOR_SIZENS = 8;
const SDL_SYSTEM_CURSOR_SIZEALL = 9;
const SDL_SYSTEM_CURSOR_NO = 10;
const SDL_SYSTEM_CURSOR_HAND = 11;
const SDL_NUM_SYSTEM_CURSORS = 12;
const SDL_MOUSEWHEEL_NORMAL = 0;
const SDL_MOUSEWHEEL_FLIPPED = 1;
//const SDL_BUTTON = (X) (1 << ((X)-1));
const SDL_BUTTON_LEFT = 1;
const SDL_BUTTON_MIDDLE = 2;
const SDL_BUTTON_RIGHT = 3;
const SDL_BUTTON_X1 = 4;
const SDL_BUTTON_X2 = 5;
//const SDL_BUTTON_LMASK = SDL_BUTTON(SDL_BUTTON_LEFT);
//const SDL_BUTTON_MMASK = SDL_BUTTON(SDL_BUTTON_MIDDLE);
//const SDL_BUTTON_RMASK = SDL_BUTTON(SDL_BUTTON_RIGHT);
//const SDL_BUTTON_X1MASK = SDL_BUTTON(SDL_BUTTON_X1);
//const SDL_BUTTON_X2MASK = SDL_BUTTON(SDL_BUTTON_X2);
//const SDL_mutex_h_ = ;
//const SDL_THREAD_ANNOTATION_ATTRIBUTE__ = (x) __attribute__((x));
//const SDL_CAPABILITY = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(capability(x));
//const SDL_SCOPED_CAPABILITY = SDL_THREAD_ANNOTATION_ATTRIBUTE__(scoped_lockable);
//const SDL_GUARDED_BY = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(guarded_by(x));
//const SDL_PT_GUARDED_BY = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(pt_guarded_by(x));
//const SDL_ACQUIRED_BEFORE = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(acquired_before(x));
//const SDL_ACQUIRED_AFTER = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(acquired_after(x));
//const SDL_REQUIRES = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(requires_capability(x));
//const SDL_REQUIRES_SHARED = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(requires_shared_capability(x));
//const SDL_ACQUIRE = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(acquire_capability(x));
//const SDL_ACQUIRE_SHARED = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(acquire_shared_capability(x));
//const SDL_RELEASE = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(release_capability(x));
//const SDL_RELEASE_SHARED = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(release_shared_capability(x));
//const SDL_RELEASE_GENERIC = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(release_generic_capability(x));
//const SDL_TRY_ACQUIRE = (x, y) SDL_THREAD_ANNOTATION_ATTRIBUTE__(try_acquire_capability(x, y));
//const SDL_TRY_ACQUIRE_SHARED = (x, y) SDL_THREAD_ANNOTATION_ATTRIBUTE__(try_acquire_shared_capability(x, y));
//const SDL_EXCLUDES = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(locks_excluded(x));
//const SDL_ASSERT_CAPABILITY = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(assert_capability(x));
//const SDL_ASSERT_SHARED_CAPABILITY = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(assert_shared_capability(x));
//const SDL_RETURN_CAPABILITY = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(lock_returned(x));
//const SDL_NO_THREAD_SAFETY_ANALYSIS = SDL_THREAD_ANNOTATION_ATTRIBUTE__(no_thread_safety_analysis);
const SDL_MUTEX_TIMEDOUT = 1;
//const SDL_MUTEX_MAXWAIT = (~(Uint32)0);
//const SDL_mutexP = (m) SDL_LockMutex(m);
//const SDL_mutexV = (m) SDL_UnlockMutex(m);
//const SDLname_h_ = ;
const NeedFunctionPrototypes = 1;
//const SDL_NAME = (X) SDL_##X;
//const SDL_pixels_h_ = ;
const SDL_ALPHA_OPAQUE = 255;
const SDL_ALPHA_TRANSPARENT = 0;
const SDL_PIXELTYPE_UNKNOWN = 0;
const SDL_PIXELTYPE_INDEX1 = 1;
const SDL_PIXELTYPE_INDEX4 = 2;
const SDL_PIXELTYPE_INDEX8 = 3;
const SDL_PIXELTYPE_PACKED8 = 4;
const SDL_PIXELTYPE_PACKED16 = 5;
const SDL_PIXELTYPE_PACKED32 = 6;
const SDL_PIXELTYPE_ARRAYU8 = 7;
const SDL_PIXELTYPE_ARRAYU16 = 8;
const SDL_PIXELTYPE_ARRAYU32 = 9;
const SDL_PIXELTYPE_ARRAYF16 = 10;
const SDL_PIXELTYPE_ARRAYF32 = 11;
const SDL_BITMAPORDER_NONE = 0;
const SDL_BITMAPORDER_4321 = 1;
const SDL_BITMAPORDER_1234 = 2;
const SDL_PACKEDORDER_NONE = 0;
const SDL_PACKEDORDER_XRGB = 1;
const SDL_PACKEDORDER_RGBX = 2;
const SDL_PACKEDORDER_ARGB = 3;
const SDL_PACKEDORDER_RGBA = 4;
const SDL_PACKEDORDER_XBGR = 5;
const SDL_PACKEDORDER_BGRX = 6;
const SDL_PACKEDORDER_ABGR = 7;
const SDL_PACKEDORDER_BGRA = 8;
const SDL_ARRAYORDER_NONE = 0;
const SDL_ARRAYORDER_RGB = 1;
const SDL_ARRAYORDER_RGBA = 2;
const SDL_ARRAYORDER_ARGB = 3;
const SDL_ARRAYORDER_BGR = 4;
const SDL_ARRAYORDER_BGRA = 5;
const SDL_ARRAYORDER_ABGR = 6;
const SDL_PACKEDLAYOUT_NONE = 0;
const SDL_PACKEDLAYOUT_332 = 1;
const SDL_PACKEDLAYOUT_4444 = 2;
const SDL_PACKEDLAYOUT_1555 = 3;
const SDL_PACKEDLAYOUT_5551 = 4;
const SDL_PACKEDLAYOUT_565 = 5;
const SDL_PACKEDLAYOUT_8888 = 6;
const SDL_PACKEDLAYOUT_2101010 = 7;
const SDL_PACKEDLAYOUT_1010102 = 8;
//const SDL_DEFINE_PIXELFOURCC = (A, B, C, D) SDL_FOURCC(A, B, C, D);
//const SDL_DEFINE_PIXELFORMAT = (type, order, layout, bits, bytes) ((1 << 28) | ((type) << 24) | ((order) << 20) | ((layout) << 16) | ((bits) << 8) | ((bytes) << 0));
//const SDL_PIXELFLAG = (X) (((X) >> 28) & 0x0);
//const SDL_PIXELTYPE = (X) (((X) >> 24) & 0x0);
//const SDL_PIXELORDER = (X) (((X) >> 20) & 0x0);
//const SDL_PIXELLAYOUT = (X) (((X) >> 16) & 0x0);
//const SDL_BITSPERPIXEL = (X) (((X) >> 8) & 0xFF);
//const SDL_BYTESPERPIXEL = (X) (SDL_ISPIXELFORMAT_FOURCC(X) ? ((((X) == SDL_PIXELFORMAT_YUY2) || ((X) == SDL_PIXELFORMAT_UYVY) || ((X) == SDL_PIXELFORMAT_YVYU)) ? 2 : 1) : (((X) >> 0) & 0xFF));
//const SDL_ISPIXELFORMAT_INDEXED = (format) (!SDL_ISPIXELFORMAT_FOURCC(format) && ((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX1) || (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX4) || (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX8)));
//const SDL_ISPIXELFORMAT_PACKED = (format) (!SDL_ISPIXELFORMAT_FOURCC(format) && ((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_PACKED8) || (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_PACKED16) || (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_PACKED32)));
//const SDL_ISPIXELFORMAT_ARRAY = (format) (!SDL_ISPIXELFORMAT_FOURCC(format) && ((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYU8) || (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYU16) || (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYU32) || (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYF16) || (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYF32)));
//const SDL_ISPIXELFORMAT_ALPHA = (format) ((SDL_ISPIXELFORMAT_PACKED(format) && ((SDL_PIXELORDER(format) == SDL_PACKEDORDER_ARGB) || (SDL_PIXELORDER(format) == SDL_PACKEDORDER_RGBA) || (SDL_PIXELORDER(format) == SDL_PACKEDORDER_ABGR) || (SDL_PIXELORDER(format) == SDL_PACKEDORDER_BGRA))) || (SDL_ISPIXELFORMAT_ARRAY(format) && ((SDL_PIXELORDER(format) == SDL_ARRAYORDER_ARGB) || (SDL_PIXELORDER(format) == SDL_ARRAYORDER_RGBA) || (SDL_PIXELORDER(format) == SDL_ARRAYORDER_ABGR) || (SDL_PIXELORDER(format) == SDL_ARRAYORDER_BGRA))));
//const SDL_ISPIXELFORMAT_FOURCC = (format) ((format) && (SDL_PIXELFLAG(format) != 1));
const SDL_PIXELFORMAT_UNKNOWN = 0;
//const SDL_PIXELFORMAT_INDEX1LSB = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_INDEX1, SDL_BITMAPORDER_4321, 0, 1, 0);
//const SDL_PIXELFORMAT_INDEX1MSB = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_INDEX1, SDL_BITMAPORDER_1234, 0, 1, 0);
//const SDL_PIXELFORMAT_INDEX4LSB = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_INDEX4, SDL_BITMAPORDER_4321, 0, 4, 0);
//const SDL_PIXELFORMAT_INDEX4MSB = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_INDEX4, SDL_BITMAPORDER_1234, 0, 4, 0);
//const SDL_PIXELFORMAT_INDEX8 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_INDEX8, 0, 0, 8, 1);
//const SDL_PIXELFORMAT_RGB332 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED8, SDL_PACKEDORDER_XRGB, SDL_PACKEDLAYOUT_332, 8, 1);
//const SDL_PIXELFORMAT_XRGB4444 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XRGB, SDL_PACKEDLAYOUT_4444, 12, 2);
//const SDL_PIXELFORMAT_RGB444 = SDL_PIXELFORMAT_XRGB4444;
//const SDL_PIXELFORMAT_XBGR4444 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XBGR, SDL_PACKEDLAYOUT_4444, 12, 2);
//const SDL_PIXELFORMAT_BGR444 = SDL_PIXELFORMAT_XBGR4444;
//const SDL_PIXELFORMAT_XRGB1555 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XRGB, SDL_PACKEDLAYOUT_1555, 15, 2);
//const SDL_PIXELFORMAT_RGB555 = SDL_PIXELFORMAT_XRGB1555;
//const SDL_PIXELFORMAT_XBGR1555 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XBGR, SDL_PACKEDLAYOUT_1555, 15, 2);
//const SDL_PIXELFORMAT_BGR555 = SDL_PIXELFORMAT_XBGR1555;
//const SDL_PIXELFORMAT_ARGB4444 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_ARGB, SDL_PACKEDLAYOUT_4444, 16, 2);
//const SDL_PIXELFORMAT_RGBA4444 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_RGBA, SDL_PACKEDLAYOUT_4444, 16, 2);
//const SDL_PIXELFORMAT_ABGR4444 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_ABGR, SDL_PACKEDLAYOUT_4444, 16, 2);
//const SDL_PIXELFORMAT_BGRA4444 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_BGRA, SDL_PACKEDLAYOUT_4444, 16, 2);
//const SDL_PIXELFORMAT_ARGB1555 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_ARGB, SDL_PACKEDLAYOUT_1555, 16, 2);
//const SDL_PIXELFORMAT_RGBA5551 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_RGBA, SDL_PACKEDLAYOUT_5551, 16, 2);
//const SDL_PIXELFORMAT_ABGR1555 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_ABGR, SDL_PACKEDLAYOUT_1555, 16, 2);
//const SDL_PIXELFORMAT_BGRA5551 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_BGRA, SDL_PACKEDLAYOUT_5551, 16, 2);
//const SDL_PIXELFORMAT_RGB565 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XRGB, SDL_PACKEDLAYOUT_565, 16, 2);
//const SDL_PIXELFORMAT_BGR565 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XBGR, SDL_PACKEDLAYOUT_565, 16, 2);
//const SDL_PIXELFORMAT_RGB24 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYU8, SDL_ARRAYORDER_RGB, 0, 24, 3);
//const SDL_PIXELFORMAT_BGR24 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYU8, SDL_ARRAYORDER_BGR, 0, 24, 3);
//const SDL_PIXELFORMAT_XRGB8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_XRGB, SDL_PACKEDLAYOUT_8888, 24, 4);
//const SDL_PIXELFORMAT_RGB888 = SDL_PIXELFORMAT_XRGB8888;
//const SDL_PIXELFORMAT_RGBX8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_RGBX, SDL_PACKEDLAYOUT_8888, 24, 4);
//const SDL_PIXELFORMAT_XBGR8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_XBGR, SDL_PACKEDLAYOUT_8888, 24, 4);
//const SDL_PIXELFORMAT_BGR888 = SDL_PIXELFORMAT_XBGR8888;
//const SDL_PIXELFORMAT_BGRX8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_BGRX, SDL_PACKEDLAYOUT_8888, 24, 4);
//const SDL_PIXELFORMAT_ARGB8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_ARGB, SDL_PACKEDLAYOUT_8888, 32, 4);
//const SDL_PIXELFORMAT_RGBA8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_RGBA, SDL_PACKEDLAYOUT_8888, 32, 4);
//const SDL_PIXELFORMAT_ABGR8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_ABGR, SDL_PACKEDLAYOUT_8888, 32, 4);
//const SDL_PIXELFORMAT_BGRA8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_BGRA, SDL_PACKEDLAYOUT_8888, 32, 4);
//const SDL_PIXELFORMAT_ARGB2101010 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_ARGB, SDL_PACKEDLAYOUT_2101010, 32, 4);
//const SDL_PIXELFORMAT_RGBA32 = SDL_PIXELFORMAT_RGBA8888;
//const SDL_PIXELFORMAT_ARGB32 = SDL_PIXELFORMAT_ARGB8888;
//const SDL_PIXELFORMAT_BGRA32 = SDL_PIXELFORMAT_BGRA8888;
//const SDL_PIXELFORMAT_ABGR32 = SDL_PIXELFORMAT_ABGR8888;
//const SDL_PIXELFORMAT_YV12 = SDL_DEFINE_PIXELFOURCC('Y', 'V', '1', '2');
//const SDL_PIXELFORMAT_IYUV = SDL_DEFINE_PIXELFOURCC('I', 'Y', 'U', 'V');
//const SDL_PIXELFORMAT_YUY2 = SDL_DEFINE_PIXELFOURCC('Y', 'U', 'Y', '2');
//const SDL_PIXELFORMAT_UYVY = SDL_DEFINE_PIXELFOURCC('U', 'Y', 'V', 'Y');
//const SDL_PIXELFORMAT_YVYU = SDL_DEFINE_PIXELFOURCC('Y', 'V', 'Y', 'U');
//const SDL_PIXELFORMAT_NV12 = SDL_DEFINE_PIXELFOURCC('N', 'V', '1', '2');
//const SDL_PIXELFORMAT_NV21 = SDL_DEFINE_PIXELFOURCC('N', 'V', '2', '1');
//const SDL_PIXELFORMAT_EXTERNAL_OES = SDL_DEFINE_PIXELFOURCC('O', 'E', 'S', ' ');
//const SDL_Colour = SDL_Color;
//const SDL_platform_h_ = ;
//const __AIX__ = 1;
//const __HAIKU__ = 1;
//const __BSDI__ = 1;
//const __DREAMCAST__ = 1;
//const __FREEBSD__ = 1;
//const __HPUX__ = 1;
//const __IRIX__ = 1;
//const __LINUX__ = 1;
//const __ANDROID__ = 1;
//const __NGAGE__ = 1;
const TARGET_OS_MACCATALYST = 0;
const TARGET_OS_IOS = 0;
const TARGET_OS_IPHONE = 0;
const TARGET_OS_TV = 0;
const TARGET_OS_SIMULATOR = 0;
//const __TVOS__ = 1;
//const __IPHONEOS__ = 1;
//const __MACOSX__ = 1;
//const __NETBSD__ = 1;
//const __OPENBSD__ = 1;
//const __OS2__ = 1;
//const __OSF__ = 1;
//const __QNXNTO__ = 1;
//const __RISCOS__ = 1;
//const __SOLARIS__ = 1;
const HAVE_WINAPIFAMILY_H = 1;
//const WINAPI_FAMILY_WINRT = (!WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) && WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP));
//const __WINRT__ = 1;
//const __WINGDK__ = 1;
//const __XBOXONE__ = 1;
//const __XBOXSERIES__ = 1;
//const __WINDOWS__ = 1;
//const __WIN32__ = 1;
//const __GDK__ = 1;
//const __PSP__ = 1;
//const __PS2__ = 1;
//const __NACL__ = 1;
//const __PNACL__ = 1;
//const __SDL_NOGETPROCADDR__ = ;
//const __VITA__ = 1;
//const __3DS__ = 1;
//const SDL_power_h_ = ;
const SDL_POWERSTATE_UNKNOWN = 0;
const SDL_POWERSTATE_ON_BATTERY = 1;
const SDL_POWERSTATE_NO_BATTERY = 2;
const SDL_POWERSTATE_CHARGING = 3;
const SDL_POWERSTATE_CHARGED = 4;
//const SDL_quit_h_ = ;
//const SDL_QuitRequested = () (SDL_PumpEvents(), (SDL_PeepEvents(NULL,0,SDL_PEEKEVENT,SDL_QUIT,SDL_QUIT) > 0));
//const SDL_rect_h_ = ;
//const SDL_render_h_ = ;
const SDL_RENDERER_SOFTWARE = 0x00000001;
const SDL_RENDERER_ACCELERATED = 0x00000002;
const SDL_RENDERER_PRESENTVSYNC = 0x00000004;
const SDL_RENDERER_TARGETTEXTURE = 0x00000008;
const SDL_ScaleModeNearest = 0;
const SDL_ScaleModeLinear = 1;
const SDL_ScaleModeBest = 2;
const SDL_TEXTUREACCESS_STATIC = 0;
const SDL_TEXTUREACCESS_STREAMING = 1;
const SDL_TEXTUREACCESS_TARGET = 2;
const SDL_TEXTUREMODULATE_NONE = 0x00000000;
const SDL_TEXTUREMODULATE_COLOR = 0x00000001;
const SDL_TEXTUREMODULATE_ALPHA = 0x00000002;
const SDL_FLIP_NONE = 0x00000000;
const SDL_FLIP_HORIZONTAL = 0x00000001;
const SDL_FLIP_VERTICAL = 0x00000002;
const SDL_REVISION = 'SDL-release-2.28.5-0-g15ead9a40 (" SDL_VENDOR_INFO ")';
const SDL_REVISION_NUMBER = 0;
//const SDL_rwops_h_ = ;
const SDL_RWOPS_UNKNOWN = 0;
const SDL_RWOPS_WINFILE = 1;
const SDL_RWOPS_STDFILE = 2;
const SDL_RWOPS_JNIFILE = 3;
const SDL_RWOPS_MEMORY = 4;
const SDL_RWOPS_MEMORY_RO = 5;
const RW_SEEK_SET = 0;
const RW_SEEK_CUR = 1;
const RW_SEEK_END = 2;
//const SDL_scancode_h_ = ;
const SDL_SCANCODE_UNKNOWN = 0;
const SDL_SCANCODE_A = 4;
const SDL_SCANCODE_B = 5;
const SDL_SCANCODE_C = 6;
const SDL_SCANCODE_D = 7;
const SDL_SCANCODE_E = 8;
const SDL_SCANCODE_F = 9;
const SDL_SCANCODE_G = 10;
const SDL_SCANCODE_H = 11;
const SDL_SCANCODE_I = 12;
const SDL_SCANCODE_J = 13;
const SDL_SCANCODE_K = 14;
const SDL_SCANCODE_L = 15;
const SDL_SCANCODE_M = 16;
const SDL_SCANCODE_N = 17;
const SDL_SCANCODE_O = 18;
const SDL_SCANCODE_P = 19;
const SDL_SCANCODE_Q = 20;
const SDL_SCANCODE_R = 21;
const SDL_SCANCODE_S = 22;
const SDL_SCANCODE_T = 23;
const SDL_SCANCODE_U = 24;
const SDL_SCANCODE_V = 25;
const SDL_SCANCODE_W = 26;
const SDL_SCANCODE_X = 27;
const SDL_SCANCODE_Y = 28;
const SDL_SCANCODE_Z = 29;
const SDL_SCANCODE_1 = 30;
const SDL_SCANCODE_2 = 31;
const SDL_SCANCODE_3 = 32;
const SDL_SCANCODE_4 = 33;
const SDL_SCANCODE_5 = 34;
const SDL_SCANCODE_6 = 35;
const SDL_SCANCODE_7 = 36;
const SDL_SCANCODE_8 = 37;
const SDL_SCANCODE_9 = 38;
const SDL_SCANCODE_0 = 39;
const SDL_SCANCODE_RETURN = 40;
const SDL_SCANCODE_ESCAPE = 41;
const SDL_SCANCODE_BACKSPACE = 42;
const SDL_SCANCODE_TAB = 43;
const SDL_SCANCODE_SPACE = 44;
const SDL_SCANCODE_MINUS = 45;
const SDL_SCANCODE_EQUALS = 46;
const SDL_SCANCODE_LEFTBRACKET = 47;
const SDL_SCANCODE_RIGHTBRACKET = 48;
const SDL_SCANCODE_BACKSLASH = 49;
const SDL_SCANCODE_NONUSHASH = 50;
const SDL_SCANCODE_SEMICOLON = 51;
const SDL_SCANCODE_APOSTROPHE = 52;
const SDL_SCANCODE_GRAVE = 53;
const SDL_SCANCODE_COMMA = 54;
const SDL_SCANCODE_PERIOD = 55;
const SDL_SCANCODE_SLASH = 56;
const SDL_SCANCODE_CAPSLOCK = 57;
const SDL_SCANCODE_F1 = 58;
const SDL_SCANCODE_F2 = 59;
const SDL_SCANCODE_F3 = 60;
const SDL_SCANCODE_F4 = 61;
const SDL_SCANCODE_F5 = 62;
const SDL_SCANCODE_F6 = 63;
const SDL_SCANCODE_F7 = 64;
const SDL_SCANCODE_F8 = 65;
const SDL_SCANCODE_F9 = 66;
const SDL_SCANCODE_F10 = 67;
const SDL_SCANCODE_F11 = 68;
const SDL_SCANCODE_F12 = 69;
const SDL_SCANCODE_PRINTSCREEN = 70;
const SDL_SCANCODE_SCROLLLOCK = 71;
const SDL_SCANCODE_PAUSE = 72;
const SDL_SCANCODE_INSERT = 73;
const SDL_SCANCODE_HOME = 74;
const SDL_SCANCODE_PAGEUP = 75;
const SDL_SCANCODE_DELETE = 76;
const SDL_SCANCODE_END = 77;
const SDL_SCANCODE_PAGEDOWN = 78;
const SDL_SCANCODE_RIGHT = 79;
const SDL_SCANCODE_LEFT = 80;
const SDL_SCANCODE_DOWN = 81;
const SDL_SCANCODE_UP = 82;
const SDL_SCANCODE_NUMLOCKCLEAR = 83;
const SDL_SCANCODE_KP_DIVIDE = 84;
const SDL_SCANCODE_KP_MULTIPLY = 85;
const SDL_SCANCODE_KP_MINUS = 86;
const SDL_SCANCODE_KP_PLUS = 87;
const SDL_SCANCODE_KP_ENTER = 88;
const SDL_SCANCODE_KP_1 = 89;
const SDL_SCANCODE_KP_2 = 90;
const SDL_SCANCODE_KP_3 = 91;
const SDL_SCANCODE_KP_4 = 92;
const SDL_SCANCODE_KP_5 = 93;
const SDL_SCANCODE_KP_6 = 94;
const SDL_SCANCODE_KP_7 = 95;
const SDL_SCANCODE_KP_8 = 96;
const SDL_SCANCODE_KP_9 = 97;
const SDL_SCANCODE_KP_0 = 98;
const SDL_SCANCODE_KP_PERIOD = 99;
const SDL_SCANCODE_NONUSBACKSLASH = 100;
const SDL_SCANCODE_APPLICATION = 101;
const SDL_SCANCODE_POWER = 102;
const SDL_SCANCODE_KP_EQUALS = 103;
const SDL_SCANCODE_F13 = 104;
const SDL_SCANCODE_F14 = 105;
const SDL_SCANCODE_F15 = 106;
const SDL_SCANCODE_F16 = 107;
const SDL_SCANCODE_F17 = 108;
const SDL_SCANCODE_F18 = 109;
const SDL_SCANCODE_F19 = 110;
const SDL_SCANCODE_F20 = 111;
const SDL_SCANCODE_F21 = 112;
const SDL_SCANCODE_F22 = 113;
const SDL_SCANCODE_F23 = 114;
const SDL_SCANCODE_F24 = 115;
const SDL_SCANCODE_EXECUTE = 116;
const SDL_SCANCODE_HELP = 117;
const SDL_SCANCODE_MENU = 118;
const SDL_SCANCODE_SELECT = 119;
const SDL_SCANCODE_STOP = 120;
const SDL_SCANCODE_AGAIN = 121;
const SDL_SCANCODE_UNDO = 122;
const SDL_SCANCODE_CUT = 123;
const SDL_SCANCODE_COPY = 124;
const SDL_SCANCODE_PASTE = 125;
const SDL_SCANCODE_FIND = 126;
const SDL_SCANCODE_MUTE = 127;
const SDL_SCANCODE_VOLUMEUP = 128;
const SDL_SCANCODE_VOLUMEDOWN = 129;
const SDL_SCANCODE_KP_COMMA = 133;
const SDL_SCANCODE_KP_EQUALSAS400 = 134;
const SDL_SCANCODE_INTERNATIONAL1 = 135;
const SDL_SCANCODE_INTERNATIONAL2 = 136;
const SDL_SCANCODE_INTERNATIONAL3 = 137;
const SDL_SCANCODE_INTERNATIONAL4 = 138;
const SDL_SCANCODE_INTERNATIONAL5 = 139;
const SDL_SCANCODE_INTERNATIONAL6 = 140;
const SDL_SCANCODE_INTERNATIONAL7 = 141;
const SDL_SCANCODE_INTERNATIONAL8 = 142;
const SDL_SCANCODE_INTERNATIONAL9 = 143;
const SDL_SCANCODE_LANG1 = 144;
const SDL_SCANCODE_LANG2 = 145;
const SDL_SCANCODE_LANG3 = 146;
const SDL_SCANCODE_LANG4 = 147;
const SDL_SCANCODE_LANG5 = 148;
const SDL_SCANCODE_LANG6 = 149;
const SDL_SCANCODE_LANG7 = 150;
const SDL_SCANCODE_LANG8 = 151;
const SDL_SCANCODE_LANG9 = 152;
const SDL_SCANCODE_ALTERASE = 153;
const SDL_SCANCODE_SYSREQ = 154;
const SDL_SCANCODE_CANCEL = 155;
const SDL_SCANCODE_CLEAR = 156;
const SDL_SCANCODE_PRIOR = 157;
const SDL_SCANCODE_RETURN2 = 158;
const SDL_SCANCODE_SEPARATOR = 159;
const SDL_SCANCODE_OUT = 160;
const SDL_SCANCODE_OPER = 161;
const SDL_SCANCODE_CLEARAGAIN = 162;
const SDL_SCANCODE_CRSEL = 163;
const SDL_SCANCODE_EXSEL = 164;
const SDL_SCANCODE_KP_00 = 176;
const SDL_SCANCODE_KP_000 = 177;
const SDL_SCANCODE_THOUSANDSSEPARATOR = 178;
const SDL_SCANCODE_DECIMALSEPARATOR = 179;
const SDL_SCANCODE_CURRENCYUNIT = 180;
const SDL_SCANCODE_CURRENCYSUBUNIT = 181;
const SDL_SCANCODE_KP_LEFTPAREN = 182;
const SDL_SCANCODE_KP_RIGHTPAREN = 183;
const SDL_SCANCODE_KP_LEFTBRACE = 184;
const SDL_SCANCODE_KP_RIGHTBRACE = 185;
const SDL_SCANCODE_KP_TAB = 186;
const SDL_SCANCODE_KP_BACKSPACE = 187;
const SDL_SCANCODE_KP_A = 188;
const SDL_SCANCODE_KP_B = 189;
const SDL_SCANCODE_KP_C = 190;
const SDL_SCANCODE_KP_D = 191;
const SDL_SCANCODE_KP_E = 192;
const SDL_SCANCODE_KP_F = 193;
const SDL_SCANCODE_KP_XOR = 194;
const SDL_SCANCODE_KP_POWER = 195;
const SDL_SCANCODE_KP_PERCENT = 196;
const SDL_SCANCODE_KP_LESS = 197;
const SDL_SCANCODE_KP_GREATER = 198;
const SDL_SCANCODE_KP_AMPERSAND = 199;
const SDL_SCANCODE_KP_DBLAMPERSAND = 200;
const SDL_SCANCODE_KP_VERTICALBAR = 201;
const SDL_SCANCODE_KP_DBLVERTICALBAR = 202;
const SDL_SCANCODE_KP_COLON = 203;
const SDL_SCANCODE_KP_HASH = 204;
const SDL_SCANCODE_KP_SPACE = 205;
const SDL_SCANCODE_KP_AT = 206;
const SDL_SCANCODE_KP_EXCLAM = 207;
const SDL_SCANCODE_KP_MEMSTORE = 208;
const SDL_SCANCODE_KP_MEMRECALL = 209;
const SDL_SCANCODE_KP_MEMCLEAR = 210;
const SDL_SCANCODE_KP_MEMADD = 211;
const SDL_SCANCODE_KP_MEMSUBTRACT = 212;
const SDL_SCANCODE_KP_MEMMULTIPLY = 213;
const SDL_SCANCODE_KP_MEMDIVIDE = 214;
const SDL_SCANCODE_KP_PLUSMINUS = 215;
const SDL_SCANCODE_KP_CLEAR = 216;
const SDL_SCANCODE_KP_CLEARENTRY = 217;
const SDL_SCANCODE_KP_BINARY = 218;
const SDL_SCANCODE_KP_OCTAL = 219;
const SDL_SCANCODE_KP_DECIMAL = 220;
const SDL_SCANCODE_KP_HEXADECIMAL = 221;
const SDL_SCANCODE_LCTRL = 224;
const SDL_SCANCODE_LSHIFT = 225;
const SDL_SCANCODE_LALT = 226;
const SDL_SCANCODE_LGUI = 227;
const SDL_SCANCODE_RCTRL = 228;
const SDL_SCANCODE_RSHIFT = 229;
const SDL_SCANCODE_RALT = 230;
const SDL_SCANCODE_RGUI = 231;
const SDL_SCANCODE_MODE = 257;
const SDL_SCANCODE_AUDIONEXT = 258;
const SDL_SCANCODE_AUDIOPREV = 259;
const SDL_SCANCODE_AUDIOSTOP = 260;
const SDL_SCANCODE_AUDIOPLAY = 261;
const SDL_SCANCODE_AUDIOMUTE = 262;
const SDL_SCANCODE_MEDIASELECT = 263;
const SDL_SCANCODE_WWW = 264;
const SDL_SCANCODE_MAIL = 265;
const SDL_SCANCODE_CALCULATOR = 266;
const SDL_SCANCODE_COMPUTER = 267;
const SDL_SCANCODE_AC_SEARCH = 268;
const SDL_SCANCODE_AC_HOME = 269;
const SDL_SCANCODE_AC_BACK = 270;
const SDL_SCANCODE_AC_FORWARD = 271;
const SDL_SCANCODE_AC_STOP = 272;
const SDL_SCANCODE_AC_REFRESH = 273;
const SDL_SCANCODE_AC_BOOKMARKS = 274;
const SDL_SCANCODE_BRIGHTNESSDOWN = 275;
const SDL_SCANCODE_BRIGHTNESSUP = 276;
const SDL_SCANCODE_DISPLAYSWITCH = 277;
const SDL_SCANCODE_KBDILLUMTOGGLE = 278;
const SDL_SCANCODE_KBDILLUMDOWN = 279;
const SDL_SCANCODE_KBDILLUMUP = 280;
const SDL_SCANCODE_EJECT = 281;
const SDL_SCANCODE_SLEEP = 282;
const SDL_SCANCODE_APP1 = 283;
const SDL_SCANCODE_APP2 = 284;
const SDL_SCANCODE_AUDIOREWIND = 285;
const SDL_SCANCODE_AUDIOFASTFORWARD = 286;
const SDL_SCANCODE_SOFTLEFT = 287;
const SDL_SCANCODE_SOFTRIGHT = 288;
const SDL_SCANCODE_CALL = 289;
const SDL_SCANCODE_ENDCALL = 290;
const SDL_NUM_SCANCODES = 512;
//const SDL_sensor_h_ = ;
const SDL_SENSOR_INVALID = -1;
const SDL_SENSOR_UNKNOWN = -1 + 1;
const SDL_SENSOR_ACCEL = -1 + 2;
const SDL_SENSOR_GYRO = -1 + 3;
const SDL_SENSOR_ACCEL_L = -1 + 4;
const SDL_SENSOR_GYRO_L = -1 + 5;
const SDL_SENSOR_ACCEL_R = -1 + 6;
const SDL_SENSOR_GYRO_R = -1 + 7;
const SDL_STANDARD_GRAVITY = 9.80665;
//const SDL_shape_h_ = ;
const SDL_NONSHAPEABLE_WINDOW = -1;
const SDL_INVALID_SHAPE_ARGUMENT = -2;
const SDL_WINDOW_LACKS_SHAPE = -3;
const ShapeModeDefault = 0;
const ShapeModeBinarizeAlpha = 1;
const ShapeModeReverseBinarizeAlpha = 2;
const ShapeModeColorKey = 3;
//const SDL_SHAPEMODEALPHA = (mode) (mode == ShapeModeDefault || mode == ShapeModeBinarizeAlpha || mode == ShapeModeReverseBinarizeAlpha);
//const SDL_stdinc_h_ = ;
//const _USE_MATH_DEFINES = ;
//const alloca = __builtin_alloca;
//const SDL_SIZE_MAX = SIZE_MAX;
//const _SDL_HAS_BUILTIN = (x) __has_builtin(x);
//const SDL_arraysize = (array) (sizeof(array)/sizeof(array[0]));
//const SDL_TABLESIZE = (table) SDL_arraysize(table);
//const SDL_STRINGIFY_ARG = (arg) #arg;
//const SDL_reinterpret_cast = (type, expression) reinterpret_cast<type>(expression);
//const SDL_static_cast = (type, expression) static_cast<type>(expression);
//const SDL_const_cast = (type, expression) const_cast<type>(expression);
//const SDL_FOURCC = (A, B, C, D) ((SDL_static_cast(Uint32, SDL_static_cast(Uint8, (A))) << 0) | (SDL_static_cast(Uint32, SDL_static_cast(Uint8, (B))) << 8) | (SDL_static_cast(Uint32, SDL_static_cast(Uint8, (C))) << 16) | (SDL_static_cast(Uint32, SDL_static_cast(Uint8, (D))) << 24));
const SDL_FALSE = 0;
const SDL_TRUE = 1;
//const SDL_MAX_SINT8 = ((Sint8)0x7);
//const SDL_MIN_SINT8 = ((Sint8)(~0x7));
//const SDL_MAX_UINT8 = ((Uint8)0xFF);
//const SDL_MIN_UINT8 = ((Uint8)0x00);
//const SDL_MAX_SINT16 = ((Sint16)0x7FFF);
//const SDL_MIN_SINT16 = ((Sint16)(~0x7FFF));
//const SDL_MAX_UINT16 = ((Uint16)0xFFFF);
//const SDL_MIN_UINT16 = ((Uint16)0x0000);
//const SDL_MAX_SINT32 = ((Sint32)0x7FFFFFFF);
//const SDL_MIN_SINT32 = ((Sint32)(~0x7FFFFFFF));
//const SDL_MAX_UINT32 = ((Uint32)0xFFFFFFFF);
//const SDL_MIN_UINT32 = ((Uint32)0x00000000);
//const SDL_MAX_SINT64 = ((Sint64)0x7FFFFFFFFFFFFFFFll);
//const SDL_MIN_SINT64 = ((Sint64)(~0x7FFFFFFFFFFFFFFFll));
//const SDL_MAX_UINT64 = ((Uint64)0xFFFFFFFFFFFFFFFFull);
//const SDL_MIN_UINT64 = ((Uint64)(0x0000000000000000ull));
//const SDL_FLT_EPSILON = FLT_EPSILON;
//const SDL_PRIs64 = PRIs64;
//const SDL_PRIu64 = PRIu64;
//const SDL_PRIx64 = PRIx64;
//const SDL_PRIX64 = PRIX64;
//const SDL_PRIs32 = PRId32;
//const SDL_PRIu32 = PRIu32;
//const SDL_PRIx32 = PRIx32;
//const SDL_PRIX32 = PRIX32;
//const SDL_IN_BYTECAP = (x);
//const SDL_INOUT_Z_CAP = (x);
//const SDL_OUT_Z_CAP = (x);
//const SDL_OUT_CAP = (x);
//const SDL_OUT_BYTECAP = (x);
//const SDL_OUT_Z_BYTECAP = (x);
//const SDL_PRINTF_FORMAT_STRING = ;
//const SDL_SCANF_FORMAT_STRING = ;
//const SDL_PRINTF_VARARG_FUNC = ( fmtargnumber );
//const SDL_SCANF_VARARG_FUNC = ( fmtargnumber );
//const SDL_COMPILE_TIME_ASSERT = (name, x) static_assert(x, #x);
const DUMMY_ENUM_VALUE = 0;
//const SDL_stack_alloc = (type, count) (type*)alloca(sizeof(type)*(count));
//const SDL_stack_free = (data);
//const SDL_min = (x, y) (((x) < (y)) ? (x) : (y));
//const SDL_max = (x, y) (((x) > (y)) ? (x) : (y));
//const SDL_clamp = (x, a, b) (((x) < (a)) ? (a) : (((x) > (b)) ? (b) : (x)));
//const SDL_zero = (x) SDL_memset(&(x), 0, sizeof((x)));
//const SDL_zerop = (x) SDL_memset((x), 0, sizeof(*(x)));
//const SDL_zeroa = (x) SDL_memset((x), 0, sizeof((x)));
//const SDL_copyp = (dst, src) { SDL_COMPILE_TIME_ASSERT(SDL_copyp, sizeof (*(dst)) == sizeof (*(src))); } SDL_memcpy((dst), (src), sizeof (*(src)));
const M_PI = 3.14159265358979323846264338327950288;
//const SDL_ICONV_ERROR = (size_t)-1;
//const SDL_ICONV_E2BIG = (size_t)-2;
//const SDL_ICONV_EILSEQ = (size_t)-3;
//const SDL_ICONV_EINVAL = (size_t)-4;
//const SDL_iconv_utf8_locale = (S) SDL_iconv_string("", "UTF-8", S, SDL_strlen(S)+1);
//const SDL_iconv_utf8_ucs2 = (S) (Uint16 *)SDL_iconv_string("UCS-2-INTERNAL", "UTF-8", S, SDL_strlen(S)+1);
//const SDL_iconv_utf8_ucs4 = (S) (Uint32 *)SDL_iconv_string("UCS-4-INTERNAL", "UTF-8", S, SDL_strlen(S)+1);
//const SDL_iconv_wchar_utf8 = (S) SDL_iconv_string("UTF-8", "WCHAR_T", (char *)S, (SDL_wcslen(S)+1)*sizeof(wchar_t));
//const SDL_malloc = malloc;
//const SDL_calloc = calloc;
//const SDL_realloc = realloc;
//const SDL_free = free;
//const SDL_memset = memset;
//const SDL_memcpy = memcpy;
//const SDL_memmove = memmove;
//const SDL_memcmp = memcmp;
//const SDL_strlcpy = strlcpy;
//const SDL_strlcat = strlcat;
//const SDL_strlen = strlen;
//const SDL_wcslen = wcslen;
//const SDL_wcslcpy = wcslcpy;
//const SDL_wcslcat = wcslcat;
//const SDL_strdup = strdup;
//const SDL_wcsdup = wcsdup;
//const SDL_strchr = strchr;
//const SDL_strrchr = strrchr;
//const SDL_strstr = strstr;
//const SDL_wcsstr = wcsstr;
//const SDL_strtokr = strtok_r;
//const SDL_strcmp = strcmp;
//const SDL_wcscmp = wcscmp;
//const SDL_strncmp = strncmp;
//const SDL_wcsncmp = wcsncmp;
//const SDL_strcasecmp = strcasecmp;
//const SDL_strncasecmp = strncasecmp;
//const SDL_sscanf = sscanf;
//const SDL_vsscanf = vsscanf;
//const SDL_snprintf = snprintf;
//const SDL_vsnprintf = vsnprintf;
//const SDL_surface_h_ = ;
const SDL_SWSURFACE = 0;
const SDL_PREALLOC = 0x00000001;
const SDL_RLEACCEL = 0x00000002;
const SDL_DONTFREE = 0x00000004;
const SDL_SIMD_ALIGNED = 0x00000008;
//const SDL_MUSTLOCK = (S) (((S)->flags & SDL_RLEACCEL) != 0);
const SDL_YUV_CONVERSION_JPEG = 0;
const SDL_YUV_CONVERSION_BT601 = 1;
const SDL_YUV_CONVERSION_BT709 = 2;
const SDL_YUV_CONVERSION_AUTOMATIC = 3;
//const SDL_LoadBMP = (file) SDL_LoadBMP_RW(SDL_RWFromFile(file, "rb"), 1);
//const SDL_SaveBMP = (surface, file) SDL_SaveBMP_RW(surface, SDL_RWFromFile(file, "wb"), 1);
//const SDL_BlitSurface = SDL_UpperBlit;
//const SDL_BlitScaled = SDL_UpperBlitScaled;
//const SDL_system_h_ = ;
//const SDL_iOSSetAnimationCallback = (window, interval, callback, callbackParam) SDL_iPhoneSetAnimationCallback(window, interval, callback, callbackParam);
//const SDL_iOSSetEventPump = (enabled) SDL_iPhoneSetEventPump(enabled);
const SDL_ANDROID_EXTERNAL_STORAGE_READ = 0x01;
const SDL_ANDROID_EXTERNAL_STORAGE_WRITE = 0x02;
const SDL_WINRT_PATH_INSTALLED_LOCATION = 0;
const SDL_WINRT_PATH_LOCAL_FOLDER = 1;
const SDL_WINRT_PATH_ROAMING_FOLDER = 2;
const SDL_WINRT_PATH_TEMP_FOLDER = 3;
const SDL_WINRT_DEVICEFAMILY_UNKNOWN = 0;
const SDL_WINRT_DEVICEFAMILY_DESKTOP = 1;
const SDL_WINRT_DEVICEFAMILY_MOBILE = 2;
const SDL_WINRT_DEVICEFAMILY_XBOX = 3;
//const SDL_syswm_h_ = ;
//const WIN32_LEAN_AND_MEAN = ;
//const NOMINMAX = ;
//const Cursor = X11Cursor;
const SDL_METALVIEW_TAG = 255;
//const INCL_WIN = ;
const SDL_SYSWM_UNKNOWN = 0;
const SDL_SYSWM_WINDOWS = 1;
const SDL_SYSWM_X11 = 2;
const SDL_SYSWM_DIRECTFB = 3;
const SDL_SYSWM_COCOA = 4;
const SDL_SYSWM_UIKIT = 5;
const SDL_SYSWM_WAYLAND = 6;
const SDL_SYSWM_MIR = 7;
const SDL_SYSWM_WINRT = 8;
const SDL_SYSWM_ANDROID = 9;
const SDL_SYSWM_VIVANTE = 10;
const SDL_SYSWM_OS2 = 11;
const SDL_SYSWM_HAIKU = 12;
const SDL_SYSWM_KMSDRM = 13;
const SDL_SYSWM_RISCOS = 14;
//const SDL_thread_h_ = ;
const SDL_THREAD_PRIORITY_LOW = 0;
const SDL_THREAD_PRIORITY_NORMAL = 1;
const SDL_THREAD_PRIORITY_HIGH = 2;
const SDL_THREAD_PRIORITY_TIME_CRITICAL = 3;
//const SDL_PASSED_BEGINTHREAD_ENDTHREAD = ;
//const SDL_beginthread = _beginthreadex;
//const SDL_endthread = _endthreadex;
//const SDL_CreateThread = (fn, name, data) SDL_CreateThread_REAL(fn, name, data, (pfnSDL_CurrentBeginThread)SDL_beginthread, (pfnSDL_CurrentEndThread)SDL_endthread);
//const SDL_CreateThreadWithStackSize = (fn, name, stacksize, data) SDL_CreateThreadWithStackSize_REAL(fn, name, stacksize, data, (pfnSDL_CurrentBeginThread)SDL_beginthread, (pfnSDL_CurrentEndThread)SDL_endthread);
//const SDL_timer_h_ = ;
//const SDL_TICKS_PASSED = (A, B) ((Sint32)((B) - (A)) <= 0);
//const SDL_touch_h_ = ;
const SDL_TOUCH_DEVICE_INVALID = -1;
const SDL_TOUCH_DEVICE_DIRECT = -1 + 1;
const SDL_TOUCH_DEVICE_INDIRECT_ABSOLUTE = -1 + 2;
const SDL_TOUCH_DEVICE_INDIRECT_RELATIVE = -1 + 3;
//const SDL_TOUCH_MOUSEID = ((Uint32)-1);
//const SDL_MOUSE_TOUCHID = ((Sint64)-1);
//const SDL_version_h_ = ;
const SDL_MAJOR_VERSION = 2;
const SDL_MINOR_VERSION = 28;
const SDL_PATCHLEVEL = 5;
//const SDL_VERSION = (x) { (x)->major = SDL_MAJOR_VERSION; (x)->minor = SDL_MINOR_VERSION; (x)->patch = SDL_PATCHLEVEL; };
//const SDL_VERSIONNUM = (X, Y, Z) ((X)*1000 + (Y)*100 + (Z));
//const SDL_COMPILEDVERSION = SDL_VERSIONNUM(SDL_MAJOR_VERSION, SDL_MINOR_VERSION, SDL_PATCHLEVEL);
//const SDL_VERSION_ATLEAST = (X, Y, Z) ((SDL_MAJOR_VERSION >= X) && (SDL_MAJOR_VERSION > X || SDL_MINOR_VERSION >= Y) && (SDL_MAJOR_VERSION > X || SDL_MINOR_VERSION > Y || SDL_PATCHLEVEL >= Z));
//const SDL_video_h_ = ;
const SDL_WINDOW_FULLSCREEN = 0x00000001;
const SDL_WINDOW_OPENGL = 0x00000002;
const SDL_WINDOW_SHOWN = 0x00000004;
const SDL_WINDOW_HIDDEN = 0x00000008;
const SDL_WINDOW_BORDERLESS = 0x00000010;
const SDL_WINDOW_RESIZABLE = 0x00000020;
const SDL_WINDOW_MINIMIZED = 0x00000040;
const SDL_WINDOW_MAXIMIZED = 0x00000080;
const SDL_WINDOW_MOUSE_GRABBED = 0x00000100;
const SDL_WINDOW_INPUT_FOCUS = 0x00000200;
const SDL_WINDOW_MOUSE_FOCUS = 0x00000400;
const SDL_WINDOW_FULLSCREEN_DESKTOP = (SDL_WINDOW_FULLSCREEN | 0x00001000);
const SDL_WINDOW_FOREIGN = 0x00000800;
const SDL_WINDOW_ALLOW_HIGHDPI = 0x00002000;
const SDL_WINDOW_MOUSE_CAPTURE = 0x00004000;
const SDL_WINDOW_ALWAYS_ON_TOP = 0x00008000;
const SDL_WINDOW_SKIP_TASKBAR = 0x00010000;
const SDL_WINDOW_UTILITY = 0x00020000;
const SDL_WINDOW_TOOLTIP = 0x00040000;
const SDL_WINDOW_POPUP_MENU = 0x00080000;
const SDL_WINDOW_KEYBOARD_GRABBED = 0x00100000;
const SDL_WINDOW_VULKAN = 0x10000000;
const SDL_WINDOW_METAL = 0x20000000;
const SDL_WINDOW_INPUT_GRABBED = SDL_WINDOW_MOUSE_GRABBED;
const SDL_WINDOWPOS_UNDEFINED_MASK = 0x1FFF0000;
//const SDL_WINDOWPOS_UNDEFINED_DISPLAY = (X) (SDL_WINDOWPOS_UNDEFINED_MASK|(X));
//const SDL_WINDOWPOS_UNDEFINED = SDL_WINDOWPOS_UNDEFINED_DISPLAY(0);
//const SDL_WINDOWPOS_ISUNDEFINED = (X) (((X)&0xFFFF0000) == SDL_WINDOWPOS_UNDEFINED_MASK);
const SDL_WINDOWPOS_CENTERED_MASK = 0x2FFF0000;
//const SDL_WINDOWPOS_CENTERED_DISPLAY = (X) (SDL_WINDOWPOS_CENTERED_MASK|(X));
//const SDL_WINDOWPOS_CENTERED = SDL_WINDOWPOS_CENTERED_DISPLAY(0);
//const SDL_WINDOWPOS_ISCENTERED = (X) (((X)&0xFFFF0000) == SDL_WINDOWPOS_CENTERED_MASK);
const SDL_WINDOWEVENT_NONE = 0;
const SDL_WINDOWEVENT_SHOWN = 1;
const SDL_WINDOWEVENT_HIDDEN = 2;
const SDL_WINDOWEVENT_EXPOSED = 3;
const SDL_WINDOWEVENT_MOVED = 4;
const SDL_WINDOWEVENT_RESIZED = 5;
const SDL_WINDOWEVENT_SIZE_CHANGED = 6;
const SDL_WINDOWEVENT_MINIMIZED = 7;
const SDL_WINDOWEVENT_MAXIMIZED = 8;
const SDL_WINDOWEVENT_RESTORED = 9;
const SDL_WINDOWEVENT_ENTER = 10;
const SDL_WINDOWEVENT_LEAVE = 11;
const SDL_WINDOWEVENT_FOCUS_GAINED = 12;
const SDL_WINDOWEVENT_FOCUS_LOST = 13;
const SDL_WINDOWEVENT_CLOSE = 14;
const SDL_WINDOWEVENT_TAKE_FOCUS = 15;
const SDL_WINDOWEVENT_HIT_TEST = 16;
const SDL_WINDOWEVENT_ICCPROF_CHANGED = 17;
const SDL_WINDOWEVENT_DISPLAY_CHANGED = 18;
const SDL_DISPLAYEVENT_NONE = 0;
const SDL_DISPLAYEVENT_ORIENTATION = 1;
const SDL_DISPLAYEVENT_CONNECTED = 2;
const SDL_DISPLAYEVENT_DISCONNECTED = 3;
const SDL_DISPLAYEVENT_MOVED = 4;
const SDL_ORIENTATION_UNKNOWN = 0;
const SDL_ORIENTATION_LANDSCAPE = 1;
const SDL_ORIENTATION_LANDSCAPE_FLIPPED = 2;
const SDL_ORIENTATION_PORTRAIT = 3;
const SDL_ORIENTATION_PORTRAIT_FLIPPED = 4;
const SDL_FLASH_CANCEL = 0;
const SDL_FLASH_BRIEFLY = 1;
const SDL_FLASH_UNTIL_FOCUSED = 2;
const SDL_GL_RED_SIZE = 0;
const SDL_GL_GREEN_SIZE = 1;
const SDL_GL_BLUE_SIZE = 2;
const SDL_GL_ALPHA_SIZE = 3;
const SDL_GL_BUFFER_SIZE = 4;
const SDL_GL_DOUBLEBUFFER = 5;
const SDL_GL_DEPTH_SIZE = 6;
const SDL_GL_STENCIL_SIZE = 7;
const SDL_GL_ACCUM_RED_SIZE = 8;
const SDL_GL_ACCUM_GREEN_SIZE = 9;
const SDL_GL_ACCUM_BLUE_SIZE = 10;
const SDL_GL_ACCUM_ALPHA_SIZE = 11;
const SDL_GL_STEREO = 12;
const SDL_GL_MULTISAMPLEBUFFERS = 13;
const SDL_GL_MULTISAMPLESAMPLES = 14;
const SDL_GL_ACCELERATED_VISUAL = 15;
const SDL_GL_RETAINED_BACKING = 16;
const SDL_GL_CONTEXT_MAJOR_VERSION = 17;
const SDL_GL_CONTEXT_MINOR_VERSION = 18;
const SDL_GL_CONTEXT_EGL = 19;
const SDL_GL_CONTEXT_FLAGS = 20;
const SDL_GL_CONTEXT_PROFILE_MASK = 21;
const SDL_GL_SHARE_WITH_CURRENT_CONTEXT = 22;
const SDL_GL_FRAMEBUFFER_SRGB_CAPABLE = 23;
const SDL_GL_CONTEXT_RELEASE_BEHAVIOR = 24;
const SDL_GL_CONTEXT_RESET_NOTIFICATION = 25;
const SDL_GL_CONTEXT_NO_ERROR = 26;
const SDL_GL_FLOATBUFFERS = 27;
const SDL_GL_CONTEXT_PROFILE_CORE = 0x0001;
const SDL_GL_CONTEXT_PROFILE_COMPATIBILITY = 0x0002;
const SDL_GL_CONTEXT_PROFILE_ES = 0x0004;
const SDL_GL_CONTEXT_DEBUG_FLAG = 0x0001;
const SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG = 0x0002;
const SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG = 0x0004;
const SDL_GL_CONTEXT_RESET_ISOLATION_FLAG = 0x0008;
const SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE = 0x0000;
const SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH = 0x0001;
const SDL_GL_CONTEXT_RESET_NO_NOTIFICATION = 0x0000;
const SDL_GL_CONTEXT_RESET_LOSE_CONTEXT = 0x0001;
const SDL_HITTEST_NORMAL = 0;
const SDL_HITTEST_DRAGGABLE = 1;
const SDL_HITTEST_RESIZE_TOPLEFT = 2;
const SDL_HITTEST_RESIZE_TOP = 3;
const SDL_HITTEST_RESIZE_TOPRIGHT = 4;
const SDL_HITTEST_RESIZE_RIGHT = 5;
const SDL_HITTEST_RESIZE_BOTTOMRIGHT = 6;
const SDL_HITTEST_RESIZE_BOTTOM = 7;
const SDL_HITTEST_RESIZE_BOTTOMLEFT = 8;
const SDL_HITTEST_RESIZE_LEFT = 9;
//const SDL_vulkan_h_ = ;
//const NO_SDL_VULKAN_TYPEDEFS = ;
//const VK_DEFINE_HANDLE = (object) typedef struct object##_T* object;;
//const VK_DEFINE_NON_DISPATCHABLE_HANDLE = (object) typedef struct object##_T *object;;
